// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messagetype.proto

#ifndef PROTOBUF_messagetype_2eproto__INCLUDED
#define PROTOBUF_messagetype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_messagetype_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMessageDoubleImpl();
void InitDefaultsMessageDouble();
void InitDefaultsMessageFloatImpl();
void InitDefaultsMessageFloat();
void InitDefaultsMessageInt32Impl();
void InitDefaultsMessageInt32();
void InitDefaultsMessageInt64Impl();
void InitDefaultsMessageInt64();
void InitDefaultsMessageUint32Impl();
void InitDefaultsMessageUint32();
void InitDefaultsMessageUint64Impl();
void InitDefaultsMessageUint64();
void InitDefaultsMessageSint32Impl();
void InitDefaultsMessageSint32();
void InitDefaultsMessageSint64Impl();
void InitDefaultsMessageSint64();
void InitDefaultsMessageFixed32Impl();
void InitDefaultsMessageFixed32();
void InitDefaultsMessageFixed64Impl();
void InitDefaultsMessageFixed64();
void InitDefaultsMessageSfixed32Impl();
void InitDefaultsMessageSfixed32();
void InitDefaultsMessageSfixed64Impl();
void InitDefaultsMessageSfixed64();
void InitDefaultsMessageBoolImpl();
void InitDefaultsMessageBool();
void InitDefaultsMessageStringImpl();
void InitDefaultsMessageString();
void InitDefaultsMessageBytesImpl();
void InitDefaultsMessageBytes();
void InitDefaultsMessageEnumImpl();
void InitDefaultsMessageEnum();
void InitDefaultsMessageNested_MessageInnerImpl();
void InitDefaultsMessageNested_MessageInner();
void InitDefaultsMessageNestedImpl();
void InitDefaultsMessageNested();
inline void InitDefaults() {
  InitDefaultsMessageDouble();
  InitDefaultsMessageFloat();
  InitDefaultsMessageInt32();
  InitDefaultsMessageInt64();
  InitDefaultsMessageUint32();
  InitDefaultsMessageUint64();
  InitDefaultsMessageSint32();
  InitDefaultsMessageSint64();
  InitDefaultsMessageFixed32();
  InitDefaultsMessageFixed64();
  InitDefaultsMessageSfixed32();
  InitDefaultsMessageSfixed64();
  InitDefaultsMessageBool();
  InitDefaultsMessageString();
  InitDefaultsMessageBytes();
  InitDefaultsMessageEnum();
  InitDefaultsMessageNested_MessageInner();
  InitDefaultsMessageNested();
}
}  // namespace protobuf_messagetype_2eproto
namespace tizenrt {
class MessageBool;
class MessageBoolDefaultTypeInternal;
extern MessageBoolDefaultTypeInternal _MessageBool_default_instance_;
class MessageBytes;
class MessageBytesDefaultTypeInternal;
extern MessageBytesDefaultTypeInternal _MessageBytes_default_instance_;
class MessageDouble;
class MessageDoubleDefaultTypeInternal;
extern MessageDoubleDefaultTypeInternal _MessageDouble_default_instance_;
class MessageEnum;
class MessageEnumDefaultTypeInternal;
extern MessageEnumDefaultTypeInternal _MessageEnum_default_instance_;
class MessageFixed32;
class MessageFixed32DefaultTypeInternal;
extern MessageFixed32DefaultTypeInternal _MessageFixed32_default_instance_;
class MessageFixed64;
class MessageFixed64DefaultTypeInternal;
extern MessageFixed64DefaultTypeInternal _MessageFixed64_default_instance_;
class MessageFloat;
class MessageFloatDefaultTypeInternal;
extern MessageFloatDefaultTypeInternal _MessageFloat_default_instance_;
class MessageInt32;
class MessageInt32DefaultTypeInternal;
extern MessageInt32DefaultTypeInternal _MessageInt32_default_instance_;
class MessageInt64;
class MessageInt64DefaultTypeInternal;
extern MessageInt64DefaultTypeInternal _MessageInt64_default_instance_;
class MessageNested;
class MessageNestedDefaultTypeInternal;
extern MessageNestedDefaultTypeInternal _MessageNested_default_instance_;
class MessageNested_MessageInner;
class MessageNested_MessageInnerDefaultTypeInternal;
extern MessageNested_MessageInnerDefaultTypeInternal _MessageNested_MessageInner_default_instance_;
class MessageSfixed32;
class MessageSfixed32DefaultTypeInternal;
extern MessageSfixed32DefaultTypeInternal _MessageSfixed32_default_instance_;
class MessageSfixed64;
class MessageSfixed64DefaultTypeInternal;
extern MessageSfixed64DefaultTypeInternal _MessageSfixed64_default_instance_;
class MessageSint32;
class MessageSint32DefaultTypeInternal;
extern MessageSint32DefaultTypeInternal _MessageSint32_default_instance_;
class MessageSint64;
class MessageSint64DefaultTypeInternal;
extern MessageSint64DefaultTypeInternal _MessageSint64_default_instance_;
class MessageString;
class MessageStringDefaultTypeInternal;
extern MessageStringDefaultTypeInternal _MessageString_default_instance_;
class MessageUint32;
class MessageUint32DefaultTypeInternal;
extern MessageUint32DefaultTypeInternal _MessageUint32_default_instance_;
class MessageUint64;
class MessageUint64DefaultTypeInternal;
extern MessageUint64DefaultTypeInternal _MessageUint64_default_instance_;
}  // namespace tizenrt
namespace tizenrt {

enum MessageEnum_MessageType {
  MessageEnum_MessageType_MOBILE = 0,
  MessageEnum_MessageType_HOME = 1,
  MessageEnum_MessageType_WORK = 2,
  MessageEnum_MessageType_MessageEnum_MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageEnum_MessageType_MessageEnum_MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageEnum_MessageType_IsValid(int value);
const MessageEnum_MessageType MessageEnum_MessageType_MessageType_MIN = MessageEnum_MessageType_MOBILE;
const MessageEnum_MessageType MessageEnum_MessageType_MessageType_MAX = MessageEnum_MessageType_WORK;
const int MessageEnum_MessageType_MessageType_ARRAYSIZE = MessageEnum_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageEnum_MessageType_descriptor();
inline const ::std::string& MessageEnum_MessageType_Name(MessageEnum_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageEnum_MessageType_descriptor(), value);
}
inline bool MessageEnum_MessageType_Parse(
    const ::std::string& name, MessageEnum_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageEnum_MessageType>(
    MessageEnum_MessageType_descriptor(), name, value);
}
// ===================================================================

class MessageDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageDouble) */ {
 public:
  MessageDouble();
  virtual ~MessageDouble();

  MessageDouble(const MessageDouble& from);

  inline MessageDouble& operator=(const MessageDouble& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageDouble(MessageDouble&& from) noexcept
    : MessageDouble() {
    *this = ::std::move(from);
  }

  inline MessageDouble& operator=(MessageDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageDouble* internal_default_instance() {
    return reinterpret_cast<const MessageDouble*>(
               &_MessageDouble_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MessageDouble* other);
  friend void swap(MessageDouble& a, MessageDouble& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageDouble* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageDouble* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageDouble& from);
  void MergeFrom(const MessageDouble& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageDouble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageDoubleImpl();
};
// -------------------------------------------------------------------

class MessageFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageFloat) */ {
 public:
  MessageFloat();
  virtual ~MessageFloat();

  MessageFloat(const MessageFloat& from);

  inline MessageFloat& operator=(const MessageFloat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageFloat(MessageFloat&& from) noexcept
    : MessageFloat() {
    *this = ::std::move(from);
  }

  inline MessageFloat& operator=(MessageFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageFloat* internal_default_instance() {
    return reinterpret_cast<const MessageFloat*>(
               &_MessageFloat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MessageFloat* other);
  friend void swap(MessageFloat& a, MessageFloat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageFloat* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageFloat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageFloat& from);
  void MergeFrom(const MessageFloat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data() const;
  void set_data(float value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageFloatImpl();
};
// -------------------------------------------------------------------

class MessageInt32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageInt32) */ {
 public:
  MessageInt32();
  virtual ~MessageInt32();

  MessageInt32(const MessageInt32& from);

  inline MessageInt32& operator=(const MessageInt32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageInt32(MessageInt32&& from) noexcept
    : MessageInt32() {
    *this = ::std::move(from);
  }

  inline MessageInt32& operator=(MessageInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageInt32* internal_default_instance() {
    return reinterpret_cast<const MessageInt32*>(
               &_MessageInt32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MessageInt32* other);
  friend void swap(MessageInt32& a, MessageInt32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageInt32* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageInt32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageInt32& from);
  void MergeFrom(const MessageInt32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageInt32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageInt32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageInt32Impl();
};
// -------------------------------------------------------------------

class MessageInt64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageInt64) */ {
 public:
  MessageInt64();
  virtual ~MessageInt64();

  MessageInt64(const MessageInt64& from);

  inline MessageInt64& operator=(const MessageInt64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageInt64(MessageInt64&& from) noexcept
    : MessageInt64() {
    *this = ::std::move(from);
  }

  inline MessageInt64& operator=(MessageInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageInt64* internal_default_instance() {
    return reinterpret_cast<const MessageInt64*>(
               &_MessageInt64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MessageInt64* other);
  friend void swap(MessageInt64& a, MessageInt64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageInt64* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageInt64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageInt64& from);
  void MergeFrom(const MessageInt64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageInt64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data() const;
  void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageInt64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageInt64Impl();
};
// -------------------------------------------------------------------

class MessageUint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageUint32) */ {
 public:
  MessageUint32();
  virtual ~MessageUint32();

  MessageUint32(const MessageUint32& from);

  inline MessageUint32& operator=(const MessageUint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageUint32(MessageUint32&& from) noexcept
    : MessageUint32() {
    *this = ::std::move(from);
  }

  inline MessageUint32& operator=(MessageUint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageUint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageUint32* internal_default_instance() {
    return reinterpret_cast<const MessageUint32*>(
               &_MessageUint32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MessageUint32* other);
  friend void swap(MessageUint32& a, MessageUint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageUint32* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageUint32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageUint32& from);
  void MergeFrom(const MessageUint32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageUint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageUint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageUint32Impl();
};
// -------------------------------------------------------------------

class MessageUint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageUint64) */ {
 public:
  MessageUint64();
  virtual ~MessageUint64();

  MessageUint64(const MessageUint64& from);

  inline MessageUint64& operator=(const MessageUint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageUint64(MessageUint64&& from) noexcept
    : MessageUint64() {
    *this = ::std::move(from);
  }

  inline MessageUint64& operator=(MessageUint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageUint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageUint64* internal_default_instance() {
    return reinterpret_cast<const MessageUint64*>(
               &_MessageUint64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MessageUint64* other);
  friend void swap(MessageUint64& a, MessageUint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageUint64* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageUint64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageUint64& from);
  void MergeFrom(const MessageUint64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageUint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint64 data() const;
  void set_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageUint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageUint64Impl();
};
// -------------------------------------------------------------------

class MessageSint32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageSint32) */ {
 public:
  MessageSint32();
  virtual ~MessageSint32();

  MessageSint32(const MessageSint32& from);

  inline MessageSint32& operator=(const MessageSint32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSint32(MessageSint32&& from) noexcept
    : MessageSint32() {
    *this = ::std::move(from);
  }

  inline MessageSint32& operator=(MessageSint32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSint32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSint32* internal_default_instance() {
    return reinterpret_cast<const MessageSint32*>(
               &_MessageSint32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MessageSint32* other);
  friend void swap(MessageSint32& a, MessageSint32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSint32* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSint32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageSint32& from);
  void MergeFrom(const MessageSint32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSint32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageSint32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageSint32Impl();
};
// -------------------------------------------------------------------

class MessageSint64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageSint64) */ {
 public:
  MessageSint64();
  virtual ~MessageSint64();

  MessageSint64(const MessageSint64& from);

  inline MessageSint64& operator=(const MessageSint64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSint64(MessageSint64&& from) noexcept
    : MessageSint64() {
    *this = ::std::move(from);
  }

  inline MessageSint64& operator=(MessageSint64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSint64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSint64* internal_default_instance() {
    return reinterpret_cast<const MessageSint64*>(
               &_MessageSint64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MessageSint64* other);
  friend void swap(MessageSint64& a, MessageSint64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSint64* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSint64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageSint64& from);
  void MergeFrom(const MessageSint64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSint64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data() const;
  void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageSint64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageSint64Impl();
};
// -------------------------------------------------------------------

class MessageFixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageFixed32) */ {
 public:
  MessageFixed32();
  virtual ~MessageFixed32();

  MessageFixed32(const MessageFixed32& from);

  inline MessageFixed32& operator=(const MessageFixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageFixed32(MessageFixed32&& from) noexcept
    : MessageFixed32() {
    *this = ::std::move(from);
  }

  inline MessageFixed32& operator=(MessageFixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageFixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageFixed32* internal_default_instance() {
    return reinterpret_cast<const MessageFixed32*>(
               &_MessageFixed32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(MessageFixed32* other);
  friend void swap(MessageFixed32& a, MessageFixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageFixed32* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageFixed32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageFixed32& from);
  void MergeFrom(const MessageFixed32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageFixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageFixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageFixed32Impl();
};
// -------------------------------------------------------------------

class MessageFixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageFixed64) */ {
 public:
  MessageFixed64();
  virtual ~MessageFixed64();

  MessageFixed64(const MessageFixed64& from);

  inline MessageFixed64& operator=(const MessageFixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageFixed64(MessageFixed64&& from) noexcept
    : MessageFixed64() {
    *this = ::std::move(from);
  }

  inline MessageFixed64& operator=(MessageFixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageFixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageFixed64* internal_default_instance() {
    return reinterpret_cast<const MessageFixed64*>(
               &_MessageFixed64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(MessageFixed64* other);
  friend void swap(MessageFixed64& a, MessageFixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageFixed64* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageFixed64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageFixed64& from);
  void MergeFrom(const MessageFixed64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageFixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint64 data() const;
  void set_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageFixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageFixed64Impl();
};
// -------------------------------------------------------------------

class MessageSfixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageSfixed32) */ {
 public:
  MessageSfixed32();
  virtual ~MessageSfixed32();

  MessageSfixed32(const MessageSfixed32& from);

  inline MessageSfixed32& operator=(const MessageSfixed32& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSfixed32(MessageSfixed32&& from) noexcept
    : MessageSfixed32() {
    *this = ::std::move(from);
  }

  inline MessageSfixed32& operator=(MessageSfixed32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSfixed32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSfixed32* internal_default_instance() {
    return reinterpret_cast<const MessageSfixed32*>(
               &_MessageSfixed32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(MessageSfixed32* other);
  friend void swap(MessageSfixed32& a, MessageSfixed32& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSfixed32* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSfixed32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageSfixed32& from);
  void MergeFrom(const MessageSfixed32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSfixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sfixed32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageSfixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageSfixed32Impl();
};
// -------------------------------------------------------------------

class MessageSfixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageSfixed64) */ {
 public:
  MessageSfixed64();
  virtual ~MessageSfixed64();

  MessageSfixed64(const MessageSfixed64& from);

  inline MessageSfixed64& operator=(const MessageSfixed64& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageSfixed64(MessageSfixed64&& from) noexcept
    : MessageSfixed64() {
    *this = ::std::move(from);
  }

  inline MessageSfixed64& operator=(MessageSfixed64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSfixed64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageSfixed64* internal_default_instance() {
    return reinterpret_cast<const MessageSfixed64*>(
               &_MessageSfixed64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(MessageSfixed64* other);
  friend void swap(MessageSfixed64& a, MessageSfixed64& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageSfixed64* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageSfixed64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageSfixed64& from);
  void MergeFrom(const MessageSfixed64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageSfixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sfixed64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int64 data() const;
  void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageSfixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageSfixed64Impl();
};
// -------------------------------------------------------------------

class MessageBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageBool) */ {
 public:
  MessageBool();
  virtual ~MessageBool();

  MessageBool(const MessageBool& from);

  inline MessageBool& operator=(const MessageBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageBool(MessageBool&& from) noexcept
    : MessageBool() {
    *this = ::std::move(from);
  }

  inline MessageBool& operator=(MessageBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageBool* internal_default_instance() {
    return reinterpret_cast<const MessageBool*>(
               &_MessageBool_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(MessageBool* other);
  friend void swap(MessageBool& a, MessageBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageBool* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageBool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageBool& from);
  void MergeFrom(const MessageBool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  bool data() const;
  void set_data(bool value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageBool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageBoolImpl();
};
// -------------------------------------------------------------------

class MessageString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageString) */ {
 public:
  MessageString();
  virtual ~MessageString();

  MessageString(const MessageString& from);

  inline MessageString& operator=(const MessageString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageString(MessageString&& from) noexcept
    : MessageString() {
    *this = ::std::move(from);
  }

  inline MessageString& operator=(MessageString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageString* internal_default_instance() {
    return reinterpret_cast<const MessageString*>(
               &_MessageString_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(MessageString* other);
  friend void swap(MessageString& a, MessageString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageString* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageString& from);
  void MergeFrom(const MessageString& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageStringImpl();
};
// -------------------------------------------------------------------

class MessageBytes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageBytes) */ {
 public:
  MessageBytes();
  virtual ~MessageBytes();

  MessageBytes(const MessageBytes& from);

  inline MessageBytes& operator=(const MessageBytes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageBytes(MessageBytes&& from) noexcept
    : MessageBytes() {
    *this = ::std::move(from);
  }

  inline MessageBytes& operator=(MessageBytes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageBytes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageBytes* internal_default_instance() {
    return reinterpret_cast<const MessageBytes*>(
               &_MessageBytes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(MessageBytes* other);
  friend void swap(MessageBytes& a, MessageBytes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageBytes* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageBytes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageBytes& from);
  void MergeFrom(const MessageBytes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageBytes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageBytes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageBytesImpl();
};
// -------------------------------------------------------------------

class MessageEnum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageEnum) */ {
 public:
  MessageEnum();
  virtual ~MessageEnum();

  MessageEnum(const MessageEnum& from);

  inline MessageEnum& operator=(const MessageEnum& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageEnum(MessageEnum&& from) noexcept
    : MessageEnum() {
    *this = ::std::move(from);
  }

  inline MessageEnum& operator=(MessageEnum&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageEnum& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageEnum* internal_default_instance() {
    return reinterpret_cast<const MessageEnum*>(
               &_MessageEnum_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(MessageEnum* other);
  friend void swap(MessageEnum& a, MessageEnum& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageEnum* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageEnum* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageEnum& from);
  void MergeFrom(const MessageEnum& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageEnum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MessageEnum_MessageType MessageType;
  static const MessageType MOBILE =
    MessageEnum_MessageType_MOBILE;
  static const MessageType HOME =
    MessageEnum_MessageType_HOME;
  static const MessageType WORK =
    MessageEnum_MessageType_WORK;
  static inline bool MessageType_IsValid(int value) {
    return MessageEnum_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    MessageEnum_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    MessageEnum_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    MessageEnum_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return MessageEnum_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return MessageEnum_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return MessageEnum_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .tizenrt.MessageEnum.MessageType data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::tizenrt::MessageEnum_MessageType data() const;
  void set_data(::tizenrt::MessageEnum_MessageType value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageEnum)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageEnumImpl();
};
// -------------------------------------------------------------------

class MessageNested_MessageInner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageNested.MessageInner) */ {
 public:
  MessageNested_MessageInner();
  virtual ~MessageNested_MessageInner();

  MessageNested_MessageInner(const MessageNested_MessageInner& from);

  inline MessageNested_MessageInner& operator=(const MessageNested_MessageInner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageNested_MessageInner(MessageNested_MessageInner&& from) noexcept
    : MessageNested_MessageInner() {
    *this = ::std::move(from);
  }

  inline MessageNested_MessageInner& operator=(MessageNested_MessageInner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNested_MessageInner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageNested_MessageInner* internal_default_instance() {
    return reinterpret_cast<const MessageNested_MessageInner*>(
               &_MessageNested_MessageInner_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(MessageNested_MessageInner* other);
  friend void swap(MessageNested_MessageInner& a, MessageNested_MessageInner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageNested_MessageInner* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageNested_MessageInner* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageNested_MessageInner& from);
  void MergeFrom(const MessageNested_MessageInner& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageNested_MessageInner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageNested.MessageInner)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageNested_MessageInnerImpl();
};
// -------------------------------------------------------------------

class MessageNested : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tizenrt.MessageNested) */ {
 public:
  MessageNested();
  virtual ~MessageNested();

  MessageNested(const MessageNested& from);

  inline MessageNested& operator=(const MessageNested& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageNested(MessageNested&& from) noexcept
    : MessageNested() {
    *this = ::std::move(from);
  }

  inline MessageNested& operator=(MessageNested&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNested& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageNested* internal_default_instance() {
    return reinterpret_cast<const MessageNested*>(
               &_MessageNested_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(MessageNested* other);
  friend void swap(MessageNested& a, MessageNested& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageNested* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageNested* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageNested& from);
  void MergeFrom(const MessageNested& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageNested* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MessageNested_MessageInner MessageInner;

  // accessors -------------------------------------------------------

  // .tizenrt.MessageNested.MessageInner inner = 2;
  bool has_inner() const;
  void clear_inner();
  static const int kInnerFieldNumber = 2;
  const ::tizenrt::MessageNested_MessageInner& inner() const;
  ::tizenrt::MessageNested_MessageInner* release_inner();
  ::tizenrt::MessageNested_MessageInner* mutable_inner();
  void set_allocated_inner(::tizenrt::MessageNested_MessageInner* inner);

  // int32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tizenrt.MessageNested)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tizenrt::MessageNested_MessageInner* inner_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend struct ::protobuf_messagetype_2eproto::TableStruct;
  friend void ::protobuf_messagetype_2eproto::InitDefaultsMessageNestedImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageDouble

// double data = 1;
inline void MessageDouble::clear_data() {
  data_ = 0;
}
inline double MessageDouble::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageDouble.data)
  return data_;
}
inline void MessageDouble::set_data(double value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageDouble.data)
}

// -------------------------------------------------------------------

// MessageFloat

// float data = 1;
inline void MessageFloat::clear_data() {
  data_ = 0;
}
inline float MessageFloat::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageFloat.data)
  return data_;
}
inline void MessageFloat::set_data(float value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageFloat.data)
}

// -------------------------------------------------------------------

// MessageInt32

// int32 data = 1;
inline void MessageInt32::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 MessageInt32::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageInt32.data)
  return data_;
}
inline void MessageInt32::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageInt32.data)
}

// -------------------------------------------------------------------

// MessageInt64

// int64 data = 1;
inline void MessageInt64::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageInt64::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageInt64.data)
  return data_;
}
inline void MessageInt64::set_data(::google::protobuf::int64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageInt64.data)
}

// -------------------------------------------------------------------

// MessageUint32

// uint32 data = 1;
inline void MessageUint32::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 MessageUint32::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageUint32.data)
  return data_;
}
inline void MessageUint32::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageUint32.data)
}

// -------------------------------------------------------------------

// MessageUint64

// uint64 data = 1;
inline void MessageUint64::clear_data() {
  data_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageUint64::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageUint64.data)
  return data_;
}
inline void MessageUint64::set_data(::google::protobuf::uint64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageUint64.data)
}

// -------------------------------------------------------------------

// MessageSint32

// sint32 data = 1;
inline void MessageSint32::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 MessageSint32::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageSint32.data)
  return data_;
}
inline void MessageSint32::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageSint32.data)
}

// -------------------------------------------------------------------

// MessageSint64

// sint64 data = 1;
inline void MessageSint64::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageSint64::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageSint64.data)
  return data_;
}
inline void MessageSint64::set_data(::google::protobuf::int64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageSint64.data)
}

// -------------------------------------------------------------------

// MessageFixed32

// fixed32 data = 1;
inline void MessageFixed32::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 MessageFixed32::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageFixed32.data)
  return data_;
}
inline void MessageFixed32::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageFixed32.data)
}

// -------------------------------------------------------------------

// MessageFixed64

// fixed64 data = 1;
inline void MessageFixed64::clear_data() {
  data_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageFixed64::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageFixed64.data)
  return data_;
}
inline void MessageFixed64::set_data(::google::protobuf::uint64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageFixed64.data)
}

// -------------------------------------------------------------------

// MessageSfixed32

// sfixed32 data = 1;
inline void MessageSfixed32::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 MessageSfixed32::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageSfixed32.data)
  return data_;
}
inline void MessageSfixed32::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageSfixed32.data)
}

// -------------------------------------------------------------------

// MessageSfixed64

// sfixed64 data = 1;
inline void MessageSfixed64::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MessageSfixed64::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageSfixed64.data)
  return data_;
}
inline void MessageSfixed64::set_data(::google::protobuf::int64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageSfixed64.data)
}

// -------------------------------------------------------------------

// MessageBool

// bool data = 1;
inline void MessageBool::clear_data() {
  data_ = false;
}
inline bool MessageBool::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageBool.data)
  return data_;
}
inline void MessageBool::set_data(bool value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageBool.data)
}

// -------------------------------------------------------------------

// MessageString

// string data = 1;
inline void MessageString::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageString::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageString.data)
  return data_.GetNoArena();
}
inline void MessageString::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tizenrt.MessageString.data)
}
#if LANG_CXX11
inline void MessageString::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tizenrt.MessageString.data)
}
#endif
inline void MessageString::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tizenrt.MessageString.data)
}
inline void MessageString::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tizenrt.MessageString.data)
}
inline ::std::string* MessageString::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:tizenrt.MessageString.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageString::release_data() {
  // @@protoc_insertion_point(field_release:tizenrt.MessageString.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageString::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tizenrt.MessageString.data)
}

// -------------------------------------------------------------------

// MessageBytes

// bytes data = 1;
inline void MessageBytes::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MessageBytes::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageBytes.data)
  return data_.GetNoArena();
}
inline void MessageBytes::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tizenrt.MessageBytes.data)
}
#if LANG_CXX11
inline void MessageBytes::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tizenrt.MessageBytes.data)
}
#endif
inline void MessageBytes::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tizenrt.MessageBytes.data)
}
inline void MessageBytes::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tizenrt.MessageBytes.data)
}
inline ::std::string* MessageBytes::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:tizenrt.MessageBytes.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MessageBytes::release_data() {
  // @@protoc_insertion_point(field_release:tizenrt.MessageBytes.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MessageBytes::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tizenrt.MessageBytes.data)
}

// -------------------------------------------------------------------

// MessageEnum

// .tizenrt.MessageEnum.MessageType data = 1;
inline void MessageEnum::clear_data() {
  data_ = 0;
}
inline ::tizenrt::MessageEnum_MessageType MessageEnum::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageEnum.data)
  return static_cast< ::tizenrt::MessageEnum_MessageType >(data_);
}
inline void MessageEnum::set_data(::tizenrt::MessageEnum_MessageType value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageEnum.data)
}

// -------------------------------------------------------------------

// MessageNested_MessageInner

// sint32 data = 1;
inline void MessageNested_MessageInner::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 MessageNested_MessageInner::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageNested.MessageInner.data)
  return data_;
}
inline void MessageNested_MessageInner::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageNested.MessageInner.data)
}

// -------------------------------------------------------------------

// MessageNested

// int32 data = 1;
inline void MessageNested::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 MessageNested::data() const {
  // @@protoc_insertion_point(field_get:tizenrt.MessageNested.data)
  return data_;
}
inline void MessageNested::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:tizenrt.MessageNested.data)
}

// .tizenrt.MessageNested.MessageInner inner = 2;
inline bool MessageNested::has_inner() const {
  return this != internal_default_instance() && inner_ != NULL;
}
inline void MessageNested::clear_inner() {
  if (GetArenaNoVirtual() == NULL && inner_ != NULL) {
    delete inner_;
  }
  inner_ = NULL;
}
inline const ::tizenrt::MessageNested_MessageInner& MessageNested::inner() const {
  const ::tizenrt::MessageNested_MessageInner* p = inner_;
  // @@protoc_insertion_point(field_get:tizenrt.MessageNested.inner)
  return p != NULL ? *p : *reinterpret_cast<const ::tizenrt::MessageNested_MessageInner*>(
      &::tizenrt::_MessageNested_MessageInner_default_instance_);
}
inline ::tizenrt::MessageNested_MessageInner* MessageNested::release_inner() {
  // @@protoc_insertion_point(field_release:tizenrt.MessageNested.inner)
  
  ::tizenrt::MessageNested_MessageInner* temp = inner_;
  inner_ = NULL;
  return temp;
}
inline ::tizenrt::MessageNested_MessageInner* MessageNested::mutable_inner() {
  
  if (inner_ == NULL) {
    inner_ = new ::tizenrt::MessageNested_MessageInner;
  }
  // @@protoc_insertion_point(field_mutable:tizenrt.MessageNested.inner)
  return inner_;
}
inline void MessageNested::set_allocated_inner(::tizenrt::MessageNested_MessageInner* inner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete inner_;
  }
  if (inner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inner, submessage_arena);
    }
    
  } else {
    
  }
  inner_ = inner;
  // @@protoc_insertion_point(field_set_allocated:tizenrt.MessageNested.inner)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tizenrt

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tizenrt::MessageEnum_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tizenrt::MessageEnum_MessageType>() {
  return ::tizenrt::MessageEnum_MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messagetype_2eproto__INCLUDED
