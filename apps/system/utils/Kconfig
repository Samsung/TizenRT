#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#
config SYSTEM_CMDS
	bool "System shell commands"
	default y
	depends on TASH
	---help---
		Register system TASH commands enabled (ps, heapinfo, free, stackmonitor and etc).
		This configuration just registers enabled system commands in TASH, not enables
		system commands. Because they can be used without TASH by function calling.
		Let's enable system commands at each configuration.

config SECURITY_LEVEL_CMDS
	bool "Security level commands"
	default y
	depends on TASH
	select SECURITY_API
	select SECURITY_SS
	select SECURITY_LEVEL
	---help---
		Enable setting security level command in TASH
                If you enable this config, you can control the security level by using [high] or [low] option.
		For example, if you input "sec_level high", OS security level becomes high,
		so there are some restrictions to see secure informations, and so on.
		If you input "sec_level low", OS security level becomes low,
		so you can see all secure information, and so on.
		You can see current state of security level by using [status] option.

config FS_CMDS
	bool "FS shell commands"
	default y
	depends on TASH && (NFILE_DESCRIPTORS != 0)
	---help---
		Disable File System command in TASH.
		Command including ls, cd, cat, mount, and so on.

if FS_CMDS
config FSCMD_BUFFER_LEN
       int "Buffer length of FSCMD"
       default 256
       ---help---
             Buffer length of FS command's I/O operation
             Using this buffer in cat, and so on.
endif

config NET_CMDS
	bool "Network shell commands"
	default y
	depends on TASH && NETUTILS_DHCPC && NETUTILS_NETLIB && NET_LWIP
	---help---
		Disable Network command in TASH.
		Command including ifconfig, ifdown, ifup, and so on.

if NET_CMDS
config NET_PING_CMD
	bool "Network 'ping' command"
	default y
	---help---
		Network ping command

config NET_PING_CMD_ICOUNT
	int "ping command iterations"
	default 5
	depends on NET_PING_CMD
	---help---
		Number of iterations that 'ping' has to be run.

endif #NET_CMDS

config ENABLE_CPULOAD
	bool "cpuload monitor"
	default y
	depends on SCHED_CPULOAD && !FS_PROCFS_EXCLUDE_CPULOAD && !DISABLE_PTHREAD && !DISABLE_SIGNALS
	---help---
		Display current cpuload or start/stop CPU load monitor.
		CPU load monitor is a daemon that will periodically assess
		CPU usage by all live tasks and threads in the system.

if ENABLE_CPULOAD
config CPULOADMONITOR_PRIORITY
	int "CPU load monitor daemon priority"
	default 100
	---help---
		The priority to use the CPU load monitor daemon.  Default: 100

config CPULOADMONITOR_INTERVAL
	int "CPU load monitor frequency"
	default 5
	---help---
		The rate in seconds that the CPU load monitor will wait before dumping
		the next set CPU load usage information.  Default:  5 seconds.
endif #ENABLE_CPULOAD

config ENABLE_DATE
	bool "date"
	default y
	---help---
		Display or set time

config ENABLE_DMESG
	bool "dmesg"
	default y
	depends on SYSLOG && RAMLOG_SYSLOG
	---help---
		Print the contents of log message buffer

if !DISABLE_ENVIRON
config ENABLE_ENV_GET
	bool "env get"
	default y
	---help---
		print the current contents of env

config ENABLE_ENV_SET
	bool "env set"
	default y
	---help---
		set a env variable

config ENABLE_ENV_UNSET
	bool "env unset"
	default y
	---help---
		unset a specific env variable
endif #!DISABLE_ENVIRON

config ENABLE_FREE
	bool "free"
	default y
	select MMINFO if BUILD_PROTECTED
	---help---
		Show information about memory status

config ENABLE_HEAPINFO
	bool "heapinfo"
	default y
	depends on DEBUG_MM_HEAPINFO && FS_PROCFS
	select MMINFO
	---help---
		Show information about memory status per thread

if ENABLE_HEAPINFO
config HEAPINFO_USER_GROUP
	bool "Enable User defined Group Memory Usage"
	default n

if HEAPINFO_USER_GROUP
config HEAPINFO_USER_GROUP_LIST
	string "Thread Name List for measuring Alloc Size"
	default ""
	---help---
		Task/Thread name is separated with ',' and Group is separated with '/'.
		For example, "abc,def/ghi,jklmn/opqr".
endif
endif

config ENABLE_PRODCONFIG
	bool "prodconfig"
	depends on PRODCONFIG
	default n
	---help---
		print product configuration like swd.

config ENABLE_TZSELECT
	bool "tzselect"
	default n
	depends on LIBC_LOCALTIME
	---help---
		Shows the timzeon that can be set. And select timezone.

config ENABLE_IRQINFO
	bool "irqinfo"
	default n
	depends on !FS_PROCFS_EXCLUDE_IRQS
	depends on DEBUG_IRQ_INFO
	---help---
		List the registered interrupts, it's occurrence counts and corresponding isr.

config ENABLE_KILL
	bool "kill"
	default y
	---help---
		Send a signal to processes or process groups.
		When SIGKILL(9) is sent, a task/pthread which received signal will be terminated without any garbage collection.
		Users can register their own handler for SIGKILL to free the allocated memory.
		CONFIG_SIGKILL_HANDLER should be enabled for user's own handler.

config ENABLE_KILLALL
	bool "killall"
	default y
	depends on FS_PROCFS && !FS_PROCFS_EXCLUDE_PROCESS
	---help---
		Send a signal to all processes running any of the specified commands

config ENABLE_PS
	bool "ps"
	default y
	depends on FS_PROCFS && !FS_PROCFS_EXCLUDE_PROCESS
	---help---
		List of tasks/threads

config ENABLE_STACKMONITOR
	bool "Stack monitor"
	default n
	depends on FS_PROCFS && !FS_PROCFS_EXCLUDE_PROCESS
	select STACK_COLORATION
	---help---
		The stack monitor is a daemon that will periodically assess
		stack usage by all tasks and threads in the system.  This
		feature depends on internal OS features and, hence, is
		not available if the kernel build or protected build is selected.

if ENABLE_STACKMONITOR
config STACKMONITOR_STACKSIZE
	int "Stack monitor daemon stack size"
	default 4096
	---help---
		The stack size of the stack monitor daemon.  Default: 4096 bytes

config STACKMONITOR_PRIORITY
	int "Stack monitor daemon priority"
	default 100
	---help---
		The priority to use the stack monitor daemon.  Default: 100

config STACKMONITOR_INTERVAL
	int "Stack monitor dump frequency"
	default 5
	---help---
		The rate in seconds that the stack monitor will wait before dumping
		the next set stack usage information.  Default:  2 seconds.

endif #ENABLE_STACKMONITOR

config ENABLE_UPTIME
	bool "uptime"
	default y
	---help---
		print how long the system has been running
