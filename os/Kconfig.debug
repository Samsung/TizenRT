#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#

config DEBUG
	bool "Enable Debug Features"
	default n
	select DEBUG_ERROR
	---help---
		Enables built-in debug features.  Selecting this option will (1) Enable
		debug assertions in the code, (2) enable extended parameter testing in
		many functions, and (3) enable support for debug output to the SYSLOG.
		Note that enabling this option by itself does not produce debug output.
		Debug output must also be selected on a subsystem-by-subsystem basis.

if DEBUG

config DEBUG_ERROR
	bool "Enable Error Debug Output"
	default n
	---help---
		Enables ERROR debug output (assuming debug features are enabled).
		If you enable DEBUG_ERROR, debug messages for error will be reported in the
		debug SYSLOG output.
		Errors are significant system exceptions that require immediate attention.

config DEBUG_WARN
	bool "Enable Warning Debug Output"
	default n
	---help---
		Enables Warning debug output (assuming debug features are enabled).
		If you enable DEBUG_WARN, debug messages for warning will be reported in the
		debug SYSLOG output.
		Warnings are considered to be various unexpected conditions, potential errors
		or errors that will not have serious consequences.

config DEBUG_VERBOSE
	bool "Enable Informational(Verbose) Debug Output"
	default n
	---help---
		Enables Informational debug output (assuming debug features are enabled).
		If you enable DEBUG_VERBOSE, debug messages for information will be reported in the
		debug SYSLOG output.

comment "Subsystem Debug Options"

config DEBUG_AUDIO
	bool "Audio Debug Feature"
	default n
	depends on AUDIO
	---help---
		Enable Audio debug feature.

if DEBUG_AUDIO

config DEBUG_AUDIO_ERROR
	bool "Audio Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable audio error debug SYSLOG output.

config DEBUG_AUDIO_WARN
	bool "Audio Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable audio warning debug SYSLOG output.

config DEBUG_AUDIO_INFO
	bool "Audio Infomational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable audio informational debug SYSLOG output.

endif #DEBUG_AUDIO

config DEBUG_BINFMT
        bool "Binary Loader Debug Features"
        default n
        depends on BINFMT_ENABLE
        ---help---
                Enable binary loader debug features.

if DEBUG_BINFMT

config DEBUG_BINFMT_ERROR
        bool "Binary Loader Error Output"
        default n
        depends on DEBUG_ERROR
        ---help---
                Enable binary loader error output to SYSLOG.

config DEBUG_BINFMT_WARN
        bool "Binary Loader Warnings Output"
        default n
        depends on DEBUG_WARN
        ---help---
                Enable binary loader warning output to SYSLOG.

config DEBUG_BINFMT_INFO
        bool "Binary Loader Informational Output"
        default n
        depends on DEBUG_VERBOSE
        ---help---
                Enable binary loader informational output to SYSLOG.

endif # DEBUG_BINFMT

config DEBUG_BINARY_COMPRESSION
	bool "Binary Compression Debug Features"
	default n
	depends on COMPRESSED_BINARY
	---help---
		Enable binary compression debug features

if DEBUG_BINARY_COMPRESSION

config DEBUG_BINARY_COMPRESSION_ERROR
	bool "Enable Error logs of Binary Compression"
	default n
	depends on DEBUG_ERROR
	---help---
		Enables error logs for Binary Compression interface.

config DEBUG_BINARY_COMPRESSION_INFO
	bool "Enable Debug logs of Binary Compression"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enables debug logs for Binary Compression interface.

endif # DEBUG_BINARY_COMPRESSION

config DEBUG_BINMGR
        bool "Binary Manager Debug Features"
        default n
        depends on BINARY_MANAGER
        ---help---
                Enable binary manager debug features.

if DEBUG_BINMGR

config DEBUG_BINMGR_ERROR
	bool "Enable Error logs of Binary Manager"
	default n
	depends on DEBUG_ERROR
	---help---
		Enables error logs for Binary Manager interface.

config DEBUG_BINMGR_INFO
	bool "Enable Debug logs of Binary Manager"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enables debug logs for Binary Manager interface.

endif # DEBUG_BINMGR

config DEBUG_FS
	bool "File System Debug Feature"
	default n
	---help---
		Enable file system debug feature.

if DEBUG_FS

config DEBUG_FS_ERROR
	bool "File System Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable file system error debug SYSLOG output.

config DEBUG_FS_WARN
	bool "File System Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable file system warning debug SYSLOG output.

config DEBUG_FS_INFO
	bool "File System Infomational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable file system informational debug SYSLOG output.

endif #DEBUG_FS

config DEBUG_LIB
	bool "C Library Debug Feature"
	default n
	---help---
		Enable C library debug feature.

if DEBUG_LIB

config DEBUG_LIB_ERROR
	bool "C Library Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable C Library error debug SYSLOG output.

config DEBUG_LIB_WARN
	bool "C Library Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable C Library warning debug SYSLOG output.

config DEBUG_LIB_INFO
	bool "C Library Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable C Library informational debug SYSLOG output.

endif #DEBUG_LIB

config DEBUG_MM
	bool "Memory Manager Debug Feature"
	default n
	---help---
		Enable memory management debug feature.

if DEBUG_MM

config DEBUG_MM_ERROR
	bool "Memory Manager Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable memory management error debug SYSLOG output.

config DEBUG_MM_WARN
	bool "Memory Manager Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable memory management Warning debug SYSLOG output.

config DEBUG_MM_INFO
	bool "Memory Manager Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable memory management informational debug SYSLOG output.

endif #DEBUG_MM

config DEBUG_NET
	bool "Network Debug Feature"
	default n
	depends on ARCH_HAVE_NET
	---help---
		Enable network debug feature.

if DEBUG_NET

config DEBUG_NET_ERROR
	bool "Network Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable network error debug SYSLOG output.

config DEBUG_NET_WARN
	bool "Network Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable network warning debug SYSLOG output.

config DEBUG_NET_INFO
	bool "Network Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable network informational debug SYSLOG output.

endif #DEBUG_NET

config DEBUG_BLE
	bool "BLE Debug Feature"
	default n
	---help---
		Enable BLE debug feature.

if DEBUG_BLE

config DEBUG_BLE_ERROR
	bool "BLE Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable BLE error debug SYSLOG output.

config DEBUG_BLE_WARN
	bool "BLE Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable BLE warning debug SYSLOG output.

config DEBUG_BLE_INFO
	bool "BLE Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable BLE informational debug SYSLOG output.

endif #DEBUG_BLE

config DEBUG_PM
	bool "Power Management Debug Features"
	default n
	---help---
		Enable PM debug feature.

if DEBUG_PM

config DEBUG_PM_ERROR
	bool "PM Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable PM error debug SYSLOG output.

config DEBUG_PM_WARN
	bool "PM Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable PM warning debug SYSLOG output.

config DEBUG_PM_INFO
	bool "PM Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable PM informational debug SYSLOG output.

endif #DEBUG_PM

config DEBUG_SCHED
	bool "Scheduler Debug Feature"
	default n
	---help---
		Enable OS debug feature.

if DEBUG_SCHED

config DEBUG_SCHED_ERROR
	bool "Scheduler Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable OS error debug SYSLOG output.

config DEBUG_SCHED_WARN
	bool "Scheduler Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable OS warning debug SYSLOG output.

config DEBUG_SCHED_INFO
	bool "Scheduler Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable OS informational debug SYSLOG output.

endif #DEBUG_SCHED

config DEBUG_SHM
	bool "Shared Memory Debug Feature"
	default n
	depends on MM_SHM
	---help---
		Enable shared memory management debug feature.

if DEBUG_SHM

config DEBUG_SHM_ERROR
	bool "Shared Memory Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable shared memory management error debug SYSLOG output.

config DEBUG_SHM_WARN
	bool "Shared Memory Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable shared memory management warning debug SYSLOG output.

config DEBUG_SHM_INFO
	bool "Shared Memory Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable shared memory management informational debug SYSLOG output.

endif #DEBUG_SHM

config DEBUG_SYSCALL
	bool "SYSCALL Debug Feature"
	default n
	depends on LIB_SYSCALL
	---help---
		Enable very low level output related to system calls.  This gives
		you basically a poor man's version of strace.

if DEBUG_SYSCALL

config DEBUG_SYSCALL_ERROR
	bool "SYSCALL Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable system calls error debug SYSLOG output.

config DEBUG_SYSCALL_WARN
	bool "SYSCALL Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable system calls warning debug SYSLOG output.

config DEBUG_SYSCALL_INFO
	bool "SYSCALL Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable system calls informational debug SYSLOG output.

endif #DEBUG_SYSCALL

config DEBUG_TASH
	bool "TASH Debug Feature"
	default n
	depends on TASH
	---help---
		Enable TASH debug feature.

if DEBUG_TASH
config DEBUG_TASH_ERROR
	bool "Print error messages in TASH"
	default y
	depends on DEBUG_ERROR

config DEBUG_TASH_INFO
	bool "Print informational messages in TASH"
	default n
	depends on DEBUG_VERBOSE
endif #DEBUG_TASH

comment "Framework Debug Options"

config DEBUG_EVENTLOOP
	bool "EventLoop Debug Feature"
	default n
	depends on EVENTLOOP
	---help---
		Enable EventLoop debug feature.

if DEBUG_EVENTLOOP

config DEBUG_EVENTLOOP_ERROR
	bool "Enable EventLoop Error Debug Output"
	default n
	depends on DEBUG_ERROR
	---help---
		EventLoop Error Debug Output.

config DEBUG_EVENTLOOP_INFO
	bool "Enable EventLoop Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		EventLoop Informational Debug Output.

endif #DEBUG_EVENTLOOP

config DEBUG_IOTBUS
	bool "IoTbus Debug Feature"
	default n
	depends on IOTBUS
	---help---
		Enable IoTbus debug feature.

config DEBUG_MEDIA
	bool "Media Debug Feature"
	default n
	depends on MEDIA
	---help---
		Enable Media debug feature.

if DEBUG_MEDIA

config DEBUG_MEDIA_ERROR
	bool "Media Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable Media error SYSLOG output

config DEBUG_MEDIA_WARN
	bool "Media Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable Media warning SYSLOG output

config DEBUG_MEDIA_INFO
	bool "Media Informational Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable Media informational SYSLOG output

endif #DEBUG_MEDIA

config DEBUG_MESSAGING_IPC
	bool "Messaging Framework Debug Feature"
	default n
	depends on MESSAGING_IPC
	---help---
		Enable Messaging debug feature.

config DEBUG_PREFERENCE
	bool "Preference Debug Output"
	default n
	depends on PREFERENCE
	---help---
		Preference Debug Output.

if DEBUG_PREFERENCE

config DEBUG_PREFERENCE_ERROR
	bool "Enable Preference Error Debug Output"
	default y
	depends on DEBUG_ERROR
	---help---
		Preference Error Debug Output.

config DEBUG_PREFERENCE_INFO
	bool "Enable Preference Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Preference Informational Debug Output.

endif #DEBUG_PREFERENCE

config DEBUG_ST_THINGS
	bool "ST Things Debug Feature"
	default y
	depends on ST_THINGS
	---help---
		Enable st things debug feature.

if DEBUG_ST_THINGS

config DEBUG_ST_THINGS_ERROR
	bool "ST Things Error Output"
	default y
	depends on DEBUG_ERROR
	---help---
		Enable ST Things error debug SYSLOG output.

config DEBUG_ST_THINGS_WARN
	bool "ST Things Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable ST Things warning debug SYSLOG output.

config DEBUG_ST_THINGS_DEBUG
	bool "ST Things Developer Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable ST Things Developer debug SYSLOG output.

config DEBUG_ST_THINGS_INFO
	bool "ST Things Infomational Debug Output"
	default y
	depends on DEBUG_VERBOSE
	---help---
		Enable ST Things informational debug SYSLOG output.

endif #DEBUG_ST_THINGS

config DEBUG_TASK_MANAGER
	bool "Task Manager Debug Feature"
	default n
	depends on TASK_MANAGER
	---help---
		Enable Task Manager debug feature.

if DEBUG_TASK_MANAGER

config DEBUG_TASK_MANAGER_ERROR
	bool "Enable Task Manager Error Debug Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Task Manager Error Debug Output.

config DEBUG_TASK_MANAGER_INFO
	bool "Enable Task Manager Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Task Manager Informational Debug Output.

endif #DEBUG_TASK_MANAGER

config DEBUG_REBOOT_REASON
	bool "Reboot Reason Debug Feature"
	default n
	depends on SYSTEM_REBOOT_REASON
	---help---
		Enable Reboot Reason debug feature.

if DEBUG_REBOOT_REASON

config DEBUG_REBOOT_REASON_ERROR
	bool "Enable Reboot Reason Error Debug Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Reboot Reason Error Debug Output.

config DEBUG_REBOOT_REASON_INFO
	bool "Enable Reboot Reason Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Reboot Reason Informational Debug Output.

endif #DEBUG_REBOOT_REASON

config DEBUG_UI
	bool "AraUI Debug Feature"
	default n
	depends on UI
	---help---
		Enable AraUI debug feature.

if DEBUG_UI

config UI_DEBUG_DRAW
	bool "Draw debug boxes"
	default n
	---help---
		Draw debug boxes

config DEBUG_UI_ERROR
	bool "UI Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable UI error SYSLOG output

config DEBUG_UI_WARN
	bool "UI Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable UI warning SYSLOG output

config DEBUG_UI_INFO
	bool "UI Informational Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable UI informational SYSLOG output

endif #DEBUG_UI

comment "OS Function Debug Options"

config DEBUG_DMA
	bool "DMA Debug Feature"
	default n
	depends on ARCH_DMA
	---help---
		Enable DMA-releated debug Feature.
		Support for this debug option is architecture-specific and may not
		be available for some MCUs.

config ARCH_HAVE_HEAPCHECK
	bool
	default n

config DEBUG_HEAP
	bool "Heap usage debug hooks"
	default n
	depends on ARCH_HAVE_HEAPCHECK
	---help---
		Enable hooks to check heap usage.  Only supported by a few architectures.

config DEBUG_MM_HEAPINFO
	bool "Heap Info debug option"
	default n
	---help---
		Enable task wise malloc debug.

config DEBUG_CHECK_FRAGMENTATION
	bool "Show where and how memory is fragmented"
	default n
	depends on DEBUG_MM_HEAPINFO
	---help---
		Count the number of freed memory segments with the range from size 2^n to 2^(n+1).

config DEBUG_IRQ
	bool "Interrupt Controller Debug Feature"
	default n
	---help---
		Some (but not all) architectures support debug output to verify
		interrupt controller logic.  If supported, then option will enable
		that output.  This may interfere with normal operations!  You
		should *not* enable interrupt controller debug unless you suspect
		that here is a problem with that logic.  On some platforms, this
		option may even cause crashes! Use with care!

if DEBUG_IRQ

config DEBUG_IRQ_INFO
	bool "Interrupt Debug information"
	default n
	depends on DEBUG_VERBOSE
	---help---
		List the registered interrupts, it's occurrence count and corresponding isr.

endif #DEBUG_IRQ

config DEBUG_PAGING
	bool "Demand Paging Debug Feature"
	default n
	depends on PAGING
	---help---
		Enable demand paging debug Feature.

comment "Driver Debug Options"

config DEBUG_ANALOG
	bool "Analog Device Driver Debug Feature"
	default n
	---help---
		Enable Analog debug Feature.

if DEBUG_ANALOG

config DEBUG_ANALOG_ERROR
	bool "Analog Error Output"
	default y
	depends on DEBUG_ERROR
	---help---
		Enable Analog error debug output.

config DEBUG_ANALOG_WARN
	bool "Analog Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable Analog warning debug output.

config DEBUG_ANALOG_INFO
	bool "Analog Infomational Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable Analog informational debug output.

endif #DEBUG_ANALOG

config DEBUG_I2S
        bool "I2S Device Driver Debug Feature"
        default n
        ---help---
                Enable i2s debug Feature.

if DEBUG_I2S

config DEBUG_I2S_ERROR
        bool "I2S Error Output"
        default n
        depends on DEBUG_ERROR
        ---help---
                Enable i2s error debug output.

config DEBUG_I2S_WARN
        bool "I2S Warning Output"
        default n
        depends on DEBUG_WARN
        ---help---
                Enable i2s warning debug output.

config DEBUG_I2S_INFO
        bool "I2S Infomational Debug Output"
        default n
        depends on DEBUG_VERBOSE
        ---help---
                Enable i2s informational debug output.

endif #DEBUG_I2S

config DEBUG_LCD
	bool "LCD driver Debug Feature"
	default n
	depends on LCD
	---help---
		Enable lcd driver debug feature.

if DEBUG_LCD

config DEBUG_LCD_ERROR
	bool "Enable LCD Error Debug Output"
	default n
	depends on DEBUG_ERROR
	---help---
		LCD Error Debug Output.

config DEBUG_LCD_INFO
	bool "Enable LCD Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		LCD Informational Debug Output.

config DEBUG_GRAPHICS_ERROR
	bool "Enable Graphics Error Debug Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Graphics Error Debug Output.

config DEBUG_GRAPHICS_INFO
	bool "Enable Graphics Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Graphics Informational Debug Output.

endif #DEBUG_LCD

config DEBUG_PWM
	bool "PWM Debug Feature"
	default n
	depends on PWM
	---help---
		Enable PWM driver debug Feature.
		Support for this debug option is architecture-specific and may not
		be available for some MCUs.

config DEBUG_RTC
	bool "RTC Debug Feature"
	default n
	depends on RTC
	---help---
		Enable RTC driver debug Feature.
		Support for this debug option is architecture-specific and may not
		be available for some MCUs.

config DEBUG_SPI
	bool "SPI Debug Feature"
	default n
	depends on SPI
	---help---
		Enable SPI debug Feature.
		Support for this debug option is architecture-specific and may not
		be available for some MCUs.

if DEBUG_SPI

config DEBUG_SPI_ERROR
	bool "SPI Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable SPI error debug SYSLOG output.

config DEBUG_SPI_WARN
	bool "SPI Warning Output"
	default n
	depends on DEBUG_WARN
	---help---
		Enable SPI warning debug SYSLOG output.

config DEBUG_SPI_INFO
	bool "SPI Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable SPI informational debug SYSLOG output.

endif #DEBUG_SPI

config DEBUG_TIMER
	bool "Timer Debug Feature"
	default n
	depends on TIMER
	---help---
		Enable timer debug Feature.
		Support for this debug option is architecture-specific and may not
		be available for some MCUs.

if DEBUG_TIMER

config DEBUG_TIMER_ERROR
	bool "TIMER Error Output"
	default n
	depends on DEBUG_ERROR
	---help---
		Enable TIMER error debug SYSLOG output.

config DEBUG_TIMER_INFO
	bool "TIMER Informational Debug Output"
	default n
	depends on DEBUG_VERBOSE
	---help---
		Enable TIMER informational debug SYSLOG output.
endif #DEBUG_TIMER

config DEBUG_TTRACE
	bool "T-trace Debug Output"
	default n
	depends on TTRACE
	---help---
		Enable T-trace debug Feature.

config DEBUG_USB
        bool "USB Debug Features"
        default n
        depends on USBDEV || USBHOST
        ---help---
                Enable USB debug features.

if DEBUG_USB

config DEBUG_USB_ERROR
        bool "USB Error Output"
        default n
        depends on DEBUG_ERROR
        ---help---
                Enable USB error output to SYSLOG.

config DEBUG_USB_WARN
        bool "USB Warnings Output"
        default n
        depends on DEBUG_WARN
        ---help---
                Enable USB warning output to SYSLOG.

config DEBUG_USB_INFO
        bool "USB Informational Output"
        default n
        depends on DEBUG_VERBOSE
        ---help---
                Enable USB informational output to SYSLOG.

endif # DEBUG_USB

config DEBUG_VIDEO
        bool "Video Debug Features"
        default n
        depends on VIDEO_SOURCE
        ---help---
                Enable Video debug features.

if DEBUG_VIDEO

config DEBUG_VIDEO_ERROR
        bool "Video Error Output"
        default n
        depends on DEBUG_ERROR
        ---help---
                Enable Video error output to SYSLOG.

config DEBUG_VIDEO_WARN
        bool "Video Warnings Output"
        default n
        depends on DEBUG_WARN
        ---help---
                Enable Video warning output to SYSLOG.

config DEBUG_VIDEO_INFO
        bool "Video Informational Output"
        default n
        depends on DEBUG_VERBOSE
        ---help---
                Enable Video informational output to SYSLOG.

endif # DEBUG_VIDEO

config DEBUG_WATCHDOG
	bool "Watchdog Timer Debug Feature"
	default n
	depends on WATCHDOG
	---help---
		Enable watchdog timer debug Feature.
		Support for this debug option is architecture-specific and may not
		be available for some MCUs.

config DEBUG_WLAN
	bool "WLAN Debug Feature"
	default y
	depends on SCSC_WLAN
	---help---
		Enables SLSI WLAN debug Feature.
		If you enable DEBUG_WLAN, all enabled debug messages for WLAN will be reported in the
		debug SYSLOG output.
		Info: Enabling global DEBUG flag will enable ERROR and WARNING log level per default

if DEBUG_WLAN

comment "SLSI WLAN FW Debug Options"

config SCSC_ENABLE_FWFAULT_LOG
	bool "Enable Firmware Fault logging"
	default n
	---help---
		This option enables FW fault reporting in the driver.

# 	slsi wlan driver logging
#		By enabling global DEBUG flag will enable ERROR and WARNING log level per default
#		futher logging can be enabled by below flags

comment "SLSI WLAN Driver Debug Options"

config DEBUG_WLAN_DRIVER_ERROR
	bool "Enable WLAN Driver ERROR Debug Output"
	default y
	---help---
		Enable T20 logs with ERROR and WARNING debug output from the SCSC Wifi driver

config DEBUG_WLAN_DRIVER_DEBUG
	bool "Enable DEBUG Debug Output"
	default n
	select DEBUG_WLAN_DRIVER_ERROR
	---help---
		Enable T20 logs with INFO DEBUG output from the SCSC Wifi driver

config DEBUG_WLAN_DRIVER_MORE
	bool "Enable MORE Debug Output"
	default n
	select DEBUG_WLAN_DRIVER_DEBUG
	---help---
		Enable T20 logs with log level 1 & 2 from the SCSC Wifi driver

config DEBUG_WLAN_DRIVER_INFO
	bool "Enable VERBOSE Debug Output"
	default n
	select DEBUG_WLAN_DRIVER_MORE
	---help---
		Enable T20 logging with ALL log levels from the SCSC Wifi driver.

comment "SLSI WPA Supplicant Debug Options"

config DEBUG_WLAN_SUPPLICANT_ERROR
	bool "Enable WLAN Supplicant ERROR Debug Output"
	default y
	depends on WPA_SUPPLICANT
	---help---
		Enables MSG_ERROR, MGS_WARNING, MSG_INFO debug output from the SLSI wpa supplicant.
		If DEBUG is enabled and this is disable no logging is printed from supplicant.
		Errors are significant system exceptions that require immediate attention.

config DEBUG_WLAN_SUPPLICANT_DEBUG
	bool "Enable DEBUG Debug Output"
	default n
	depends on WPA_SUPPLICANT
	select DEBUG_WLAN_SUPPLICANT_ERROR
	---help---
		Enables further logging MSG_DEBUG debug output from the SLSI wpa supplicant.

config DEBUG_WLAN_SUPPLICANT_MORE
	bool "Enable MORE Debug Output"
	default n
	depends on WPA_SUPPLICANT
	select DEBUG_WLAN_SUPPLICANT_DEBUG
	---help---
		Enables further logging MSG_MSGDUMP debug output from the SLSI wpa supplicant.

config DEBUG_WLAN_SUPPLICANT_INFO
	bool "Enable VERBOSE Debug Output"
	default n
	depends on WPA_SUPPLICANT
	select DEBUG_WLAN_SUPPLICANT_MORE
	---help---
		Enables further logging MGS_EXCESSIVE debug output from the SLSI wpa supplicant.

comment "SLSI Wi-Fi API Debug Options"

config DEBUG_WLAN_API_ERROR
	bool "Enable WLAN API ERROR Debug Output"
	default y
	depends on SCSC_WLAN
	---help---
		Enables ERROR level debug output for SLSI Wi-Fi API.
		Errors are significant system exceptions that require immediate attention.

config DEBUG_WLAN_API_DEBUG
	bool "Enable DEBUG Output"
	default n
	depends on SCSC_WLAN
	select DEBUG_WLAN_API_ERROR
	---help---
		Enables DEBUG level debug output for SLSI Wi-Fi API.

config DEBUG_WLAN_API_INFO
	bool "Enable VERBOSE Debug Output"
	default n
	depends on SCSC_WLAN
	select DEBUG_WLAN_API_DEBUG
	---help---
		Enables VERBOSE level debug output for SLSI Wi-Fi API.

endif #DEBUG_WLAN

comment "System Debug Options"

config DEBUG_SYSTEM
	bool "System debug"
	default n
	select DEBUG_ERROR
	---help---
		Enable the System debug Feature.

if DEBUG_SYSTEM

config IRQ_SCHED_HISTORY
	bool "IRQ Scheduling history"
	default n

config SEMAPHORE_HISTORY
	bool "Semaphore holder history"
	default n

config TASK_SCHED_HISTORY
	bool "Task Scheduling history"
	default n

config DEBUG_IRQ_MAX_COUNT
	hex "Maximum count for irq history"
	default 0x20
	depends on IRQ_SCHED_HISTORY

config DEBUG_SEM_MAX_COUNT
	hex "Maximum count for sem history"
	default 0x20
	depends on SEMAPHORE_HISTORY

config DEBUG_TASK_MAX_COUNT
	hex "Maximum count for task history"
	default 0x20
	depends on TASK_SCHED_HISTORY

endif #DEBUG_SYSTEM

endif #DEBUG

comment "Stack Debug Options"

config ARCH_HAVE_STACKCHECK
	bool
	default n

config STACK_COLORATION
	bool "Stack coloration"
	default n
	depends on ARCH_HAVE_STACKCHECK
	---help---
		Enable stack coloration to initialize the stack memory to the value
		of STACK_COLOR and enable the stack checking APIs that can be used
		to monitor the level of stack usage.

		Only supported by a few architectures.

comment "Build Debug Options"

config DEBUG_SYMBOLS
	bool "Generate Debug Symbols"
	default y
	---help---
		Build with debug symbols (needed for use with a debugger).

config FRAME_POINTER
	bool "Enable backtracking using Frame pointer register"
	default n
	---help---
		This option uses -fno-omit-frame-pointer flag of gcc. This flag makes
		use of frame pointer register to push PC,SP and FP for every function
		call in the stack during runtime. If you say N here, the resulting
		binary will be slightly smaller amd faster. However, if neither
		FRAME_POINTER nor ARM_UNWIND are enabled, the information
		reported during system crash is very limited.

menu "Logger Module"
	depends on !DISABLE_SIGNALS

source logm/Kconfig
endmenu
