#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#

menuconfig PM
	bool "Power management (PM) driver interfaces"
	default n
	---help---
		Power management (PM) driver interfaces.  These interfaces are used
		to manage power usage of a platform by monitoring driver activity
		and by placing drivers into reduce power usage modes when the
		drivers are not active.

if PM

config PM_TEST
	bool "Power Management Functionality Test"
	default n

config PM_ENTER_SLEEP
	bool "Support to enter Sleep State from Normal State"
	default y
	depends on ARCH_SUPPORT_ENTER_SLEEP
	---help---
		Each architecture can provide mechanism to directly cause pm state
		transition from PM_NORMAL to PM_SLEEP

config PM_DEVNAME_LEN
	int "Registered device name length"
	default 32

menuconfig PM_METRICS
	bool "Power management (PM) metrics"
	default n
	---help---
		Power management's metrics for CONFIG_PM_METRICS_DURATION

if PM_METRICS

config PM_METRICS_DURATION
	int "History Duration (secs)"
	default 60


endif

config PM_MAX_STATIC_TIMER
	int "PM maximum no. of wakeup timers"
	default 10
	---help---
		Defines the maximum number of wakeup timers that will be
		statically allocated during OS start. This timers will be
		used run multiple timers to wake up the system and do required
		tasks.

config PM_SLICEMS
	int "PM time slice (msec)"
	default 100
	---help---
		The power management module collects activity counts in time slices.
		At the end of the time slice, the count accumulated during that
		interval is applied to an averaging algorithm to determine the
		activity level.

		CONFIG_PM_SLICEMS provides the duration of that time slice in
		milliseconds.  Default: 100 Milliseconds

config PM_NDOMAINS
	int "Number of PM activity domains"
	default 1
	---help---
		Defines the number of "domains" that activity may be monitored on.
		For example, you may want to separately manage the power from the
		Network domain, shutting down the network when it is not be used,
		from the UI domain, shutting down the UI when it is not in use.

config PM_MEMORY
	int "PM memory (msec)"
	default 2
	range 1 6
	---help---
		The averaging algorithm is simply: Y = (An*X + SUM(Ai*Yi))/SUM(Aj),
		where i = 1..n-1 and j= 1..n, n is the length of the "memory",
		Ai is the weight applied to each value, and X is the current
		activity.  These weights may be negative and a limited to the
		range of int16_t.

			CONFIG_PM_MEMORY provides the memory for the algorithm.  Default: 2
			CONFIG_PM_COEFn provides weight for each sample.  Default: 1

		Setting CONFIG_PM_MEMORY=1 disables all smoothing.

config PM_DVFS
	bool "Dynamic Voltage Frequency Scaling"
	default n
	depends on ARCH_HAVE_DVFS
	---help---
		Enables option to use DVFS to save power with AI_Dual chipset.

config PM_COEFN
	int "PM coefficient"
	default 1
	---help---
		See help associated with CONFIG_PM_MEMORY.

config PM_COEF1
	int "PM coefficient 1"
	default 1
	---help---
		See help associated with CONFIG_PM_MEMORY.

config PM_COEF2
	int "PM coefficient 2"
	default 1
	---help---
		See help associated with CONFIG_PM_MEMORY

		Ignored if CONFIG_PM_MEMORY <= 2

config PM_COEF3
	int "PM coefficient 3"
	default 1
	---help---
		See help associated with CONFIG_PM_MEMORY

		 Ignored if CONFIG_PM_MEMORY <= 3

config PM_COEF4
	int "PM coefficient 4"
	default 1
	---help---
		See help associated with CONFIG_PM_MEMORY

		Ignored if CONFIG_PM_MEMORY <= 4

config PM_COEF5
	int "PM coefficient 5"
	default 1
	---help---
		See help associated with CONFIG_PM_MEMORY

		Ignored if CONFIG_PM_MEMORY <= 5

config PM_IDLEENTER_THRESH
	int "PM IDLE enter threshold"
	default 1
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: <=1: Essentially no activity

config PM_IDLEEXIT_THRESH
	int "PM IDLE exit threshold"
	default 2
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: >=2: Active

config PM_IDLEENTER_COUNT
	int "PM IDLE enter count"
	default 10
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: Thirty IDLE slices to enter IDLE mode from normal

config PM_STANDBYENTER_THRESH
	int "PM STANDBY enter threshold"
	default 1
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: <=1: Essentially no activity

config PM_STANDBYEXIT_THRESH
	int "PM STANDBY exit threshold"
	default 2
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: >=2: Active

config PM_STANDBYENTER_COUNT
	int "PM STANDBY enter count"
	default 10
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: Fifty IDLE slices to enter STANDBY mode from IDLE

config PM_SLEEPENTER_THRESH
	int "PM SLEEP enter threshold"
	default 1
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: <=1: Essentially no activity

config PM_SLEEPEXIT_THRESH
	int "PM SLEEP exit threshold"
	default 2
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: >=2: Active

config PM_SLEEPENTER_COUNT
	int "PM SLEEP enter count"
	default 10
	---help---
		State changes occur when the weight activity account crosses
		threshold values for certain periods of time (time slice count).

			CONFIG_PM_xxxENTER_THRESH is the threshold value for entering state xxx.
			CONFIG_PM_xxxENTER_COUNT is the count for entering state xxx.

		Resuming to normal state, on the other hand, is usually immediate and
		controlled by wakeup conditions established by the platform.  The PM

		Default: Fifty IDLE slices to enter SLEEP mode from STANDBY

config PM_TICKSUPPRESS
	bool "Support PM Tick Suppression"
	default n
	select SCHED_TICKSUPPRESS
	depends on !SCHED_TICKLESS && ARCH_HAVE_TICKSUPPRESS
	---help---
		Periodic tick interrupts can be suppressed to keep the CPU idle for a longer period
		of time. Tick suppression requires that missed ticks while the core is in an idle state
		be compensated for when the core becomes active. To enable this configuration to
		suppress ticks, the pm_wake() API must be called when the core wakes up.

config PM_MIN_SLEEP_TIME
	int "PM MIN SLEEP enter time"
	default 0
	---help---
		This value is the minimum duration of system sleep. System should not go to sleep
		if the app request it to sleep below this value. Because then it might not be very
		power efficient. 
		Also Note that, this value is in millisecond.

endif # PM

