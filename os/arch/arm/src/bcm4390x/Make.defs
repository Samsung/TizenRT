############################################################################
#
# Copyright 2018, Cypress Semiconductor Corporation or a subsidiary of
# Cypress Semiconductor Corporation. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific
# language governing permissions and limitations under the License.
#
############################################################################

HEAD_ASRC  = bcm4390x_vectortab.S

# Common assembly language files

CMN_ASRCS += arm_head.S arm_vectors.S arm_fullcontextrestore.S
CMN_ASRCS += arm_saveusercontext.S arm_vectoraddrexcptn.S arm_vfork.S
CMN_ASRCS += cp15_coherent_dcache.S cp15_invalidate_dcache.S
CMN_ASRCS += cp15_clean_dcache.S cp15_flush_dcache.S
CMN_ASRCS += cp15_invalidate_dcache_all.S

# Configuration dependent assembly language files
ifeq ($(CONFIG_BUILD_PROTECTED),y)
CMN_ASRCS += arm_mpucontextsave.S arm_mpucontextrestore.S
endif

ifeq ($(CONFIG_ARCH_FPU),y)
CMN_ASRCS += arm_fpuconfig.S
endif

ifeq ($(CONFIG_ARCH_MEMCPY),y)
CMN_ASRCS += arm_memcpy.S
endif

ifeq ($(CONFIG_LATENCY_MEASURE_INTERRUPT),y)
CMN_ASRCS += arm_inst_benchmark.S
endif

# Common C source files

CMN_CSRCS  = up_allocateheap.c up_initialize.c up_idle.c up_interruptcontext.c
CMN_CSRCS += up_exit.c up_createstack.c up_releasestack.c up_usestack.c
CMN_CSRCS += up_vfork.c up_puts.c up_mdelay.c up_stackframe.c up_udelay.c
CMN_CSRCS += up_modifyreg8.c up_modifyreg16.c up_modifyreg32.c up_restoretask.c
ifeq ($(CONFIG_LATENCY_MEASURE),y)
CMN_CSRCS += up_getclocks.c
endif

CMN_CSRCS += arm_assert.c arm_blocktask.c arm_copyfullstate.c arm_dataabort.c
CMN_CSRCS += arm_doirq.c arm_initialstate.c arm_prefetchabort.c
CMN_CSRCS += arm_releasepending.c arm_reprioritizertr.c
CMN_CSRCS += arm_schedulesigaction.c arm_sigdeliver.c arm_syscall.c
CMN_CSRCS += arm_unblocktask.c arm_undefinedinsn.c


# Configuration dependent C files

ifeq ($(CONFIG_ARMV7M_MPU),y)
CMN_CSRCS += arm_mpu.c
ifeq ($(CONFIG_BUILD_PROTECTED),y)
CMN_CSRCS += up_task_start.c up_pthread_start.c arm_setupregions.c
ifneq ($(CONFIG_DISABLE_SIGNALS),y)
CMN_CSRCS += arm_signal_dispatch.c
CMN_UASRCS += arm_signal_handler.S
endif
endif
endif

ifeq ($(CONFIG_ARMV7R_L2CC_PL310),y)
CMN_CSRCS += arm_l2cc_pl310.c
endif

ifeq ($(CONFIG_ELF),y)
CMN_CSRCS += arm_coherent_dcache.c
else ifeq ($(CONFIG_MODULE),y)
CMN_CSRCS += arm_coherent_dcache.c
endif

ifeq ($(CONFIG_ARCH_FPU),y)
CMN_ASRCS += arm_savefpu.S arm_restorefpu.S
CMN_CSRCS += arm_copyarmstate.c
endif

ifeq ($(CONFIG_STACK_COLORATION),y)
CMN_CSRCS += up_checkstack.c
endif

CHIP_ASRCS  =

# boardctl support
ifeq ($(CONFIG_LIB_BOARDCTL),y)
DEPPATH += --dep-path $(TOPDIR)/arch
VPATH += :$(TOPDIR)/arch
CHIP_CSRCS += boardctl.c
endif

CFLAGS += -DPLATFORM_L1_CACHE_SHIFT=5
CFLAGS += -I$(TOPDIR)/../external/WICED/bcm4390x/include

VPATH += chip
EXTRA_LIBS += chip/libbcmarch.a
