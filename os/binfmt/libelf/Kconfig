#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#

config ELF_ALIGN_LOG2
	int "Log2 Section Alignment"
	default 2
	---help---
		Align all sections to this Log2 value:  0->1, 1->2, 2->4, etc.

config ELF_STACKSIZE
	int "ELF Stack Size"
	default 2048
	---help---
		This is the default stack size that will be used when starting ELF binaries.

config ELF_BUFFERSIZE
	int "ELF I/O Buffer Size"
	default 32
	---help---
		This is an I/O buffer that is used to access the ELF file.  Variable length items
		will need to be read (such as symbol names).  This is really just this initial
		size of the buffer; it will be reallocated as necessary to hold large symbol
		names).  Default: 32

config ELF_BUFFERINCR
	int "ELF I/O Buffer Realloc Increment"
	default 32
	---help---
		This is an I/O buffer that is used to access the ELF file.  Variable length items
		will need to be read (such as symbol names).  This value specifies the size
		increment to use each time the buffer is reallocated.  Default: 32

config ELF_DUMPBUFFER
	bool "Dump ELF buffers"
	default n
	depends on DEBUG_BINFMT_INFO
	---help---
		Dump various ELF buffers for debug purposes

config ELF_EXIDX_SECTNAME
	string "ELF Section Name for Exception Index"
	default ".ARM.exidx"
	depends on CXX_EXCEPTION
	---help---
		Set the name string for the exception index section on the ELF modules to
		be loaded by the ELF binary loader.

		This is needed to support exception handling on loadable ELF modules.

config ELF_EXCLUDE_SYMBOLS
	bool "Excludes symbol information from ELF file"
	default n
	---help---
		If this option is enabled, then it excludes symbol information from the ELF
		and results in a ELF of much smaller size.

config ELF_CACHE_READ
        bool "ELF cache read support"
        default n
        depends on BINFMT_ENABLE
        ---help---
		Enabling this config would increase the elf read performance by
		manyfolds with its caching mechanism.

		If an elf_read taking more time and consistently trying to read the
		same position multiple times, then there would be a considerable delay.
		Enabling this config will cache/buffer the previously accessed data.


if ELF_CACHE_READ

config ELF_CACHE_BLOCK_SIZE
        int "Block size for elf read caching"
        default 2048
        range 512 8192
        ---help---
                Enter block size to use for caching the elf read.

                Note: For compressed binaries, Make sure the cache block size, should be
                      greater than or equal to compression block size. Which would
                      yield good read performance during caching

config ELF_CACHE_BLOCKS_COUNT
        int "Number of Blocks to be cached when reading elf"
        default 60
        range 2 100
        ---help---
                Enter the number of blocks(counts) to use for caching.

endif # ELF_CACHE_READ
