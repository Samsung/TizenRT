#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#

choice
	prompt "Select target board"
	default ARCH_BOARD_SIDK_S5JT200
	---help---
		Select the board hosting the architecture.  You must first select the
		exact MCU part number, then the boards supporting that part will
		be available for selection.  Use ARCH_BOARD_CUSTOM to create a new
		board configuration.

config ARCH_BOARD_ARTIK053
	bool "Samsung ARTIK-053 Starter Kit"
	depends on ARCH_CHIP_S5JT200
	select ARCH_BOARD_ARTIK05X_FAMILY
	select ARCH_BOARD_HAVE_FLASH
	---help---
		Samsung ARTIK-053 Starter Kit based on S5JT200 IoT WiFi MCU

config ARCH_BOARD_ARTIK053S
	bool "Samsung ARTIK-053S Starter Kit"
	depends on ARCH_CHIP_S5JT200
	select ARCH_BOARD_ARTIK05X_FAMILY
	select ARCH_BOARD_HAVE_FLASH
	---help---
		Samsung ARTIK-053S Starter Kit based on S5JT200 IoT WiFi MCU

config ARCH_BOARD_ARTIK055S
	bool "Samsung ARTIK-055S Starter Kit"
	depends on ARCH_CHIP_S5JT200
	select ARCH_BOARD_ARTIK05X_FAMILY
	select ARCH_BOARD_HAVE_FLASH
	---help---
		Samsung ARTIK-055S Starter Kit based on S5JT200 IoT WiFi MCU

config ARCH_BOARD_LM3S6965EK
	bool "Stellaris LM3S6965 Evaluation Kit"
	depends on ARCH_CHIP_LM3S6965
	select ARCH_HAVE_LEDS
	---help---
		Stellaris LM3S6965 Evaluation Kit.  This board is based on the
		an ARM Cortex-M3 MCU, the Luminary/TI LM3S6965.

config ARCH_BOARD_SIDK_S5JT200
	bool "Samsung S5JT200 sidk board"
	depends on ARCH_CHIP_S5JT200
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_BOARD_HAVE_FLASH
	---help---
		Samsung S5JT200 IoT wifi MCU

config ARCH_BOARD_CY4390x
	bool "Cypress 4390x board"
	depends on ARCH_CHIP_BCM4390X
	---help---
		Cypress 4390x IoT wifi MCU

config ARCH_BOARD_STM32F407_DISC1
	bool "STMicro STM32F407-Discovery board"
	depends on ARCH_CHIP_STM32
	select ARCH_HAVE_LEDS
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	---help---
		STMicro STM32F407-DISC1 board based on the STMicro STM32F407VG MCU.

config ARCH_BOARD_STM32F429I_DISCO
	bool "STMicro STM32F429I-Discovery board"
	depends on ARCH_CHIP_STM32
	select ARCH_HAVE_LEDS
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	---help---
		STMicro STM32F429I-Discovery board based on the STMicro STM32F429ZIT6 MCU.

config ARCH_BOARD_ESP32_DEVKITC
	bool "Espressif ESP32-DevKitC board"
	depends on ARCH_CHIP_ESP32
	select ARCH_BOARD_ESP32_FAMILY
	select ARCH_BOARD_HAVE_FLASH
	---help---
		Espressif esp32 WIFI/BLE MCU

config ARCH_BOARD_ESP_WROVER_KIT
	bool "Espressif ESP-WROVER-KIT board"
	depends on ARCH_CHIP_ESP32
	select ARCH_BOARD_ESP32_FAMILY
	select ARCH_BOARD_HAVE_FLASH
	---help---
		Espressif esp32 WIFI/BLE LCDs MCU
		
config ARCH_BOARD_IMXRT1020_EVK
	bool "NXP i.MX RT 1020 EVK"
	depends on ARCH_CHIP_FAMILY_IMXRT102x
	select ARCH_HAVE_LEDS
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select AUTOGEN_MEMORY_LDSCRIPT if BUILD_PROTECTED
	select ARCH_BOARD_HAVE_FLASH
	---help---
		This is the board configuration for the port of TinyARA to the NXP i.MXRT
		evaluation kit, MIMXRT1020-EVKB.  This board features the MIMXRT1021CAF4A MCU.

config ARCH_BOARD_IMXRT1050_EVK
	bool "NXP i.MX RT 1050 EVK"
	depends on ARCH_CHIP_FAMILY_IMXRT105x
	select ARCH_HAVE_LEDS
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select AUTOGEN_MEMORY_LDSCRIPT if BUILD_PROTECTED
	select ARCH_BOARD_HAVE_FLASH
	---help---
		This is the board configuration for the port of TinyARA to the NXP i.MXRT
		evaluation kit, MIMXRT1050-EVKB.  This board features the MIMXRT1052DVL6A MCU.

config ARCH_BOARD_STM32L4R9AI_DISCO
	bool "STMicro STM32L4R9AI-Discovery board"
	depends on ARCH_CHIP_STM32L4
	select ARCH_HAVE_LEDS
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_BOARD_HAVE_FLASH
	---help---
		STMicro STM32L4R9AI-Discovery board based on the STMicro STM32L4R9AI MCU.

config ARCH_BOARD_RTL8720E
	bool "Realtek RTL8720E-Discovery board"
	depends on ARCH_CHIP_RTL8720E
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_BOARD_HAVE_FLASH
	select ARCH_HAVE_RAM_KERNEL_TEXT
	---help---
		Realtek RTL8720E-Discovery board based on the Realtek RTL8720E MCU.

config ARCH_BOARD_RTL8730E
	bool "Realtek RTL8730E-Discovery board"
	depends on ARCH_CHIP_RTL8730E
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_BOARD_HAVE_FLASH
	select ARCH_HAVE_RAM_KERNEL_TEXT
	---help---
		Realtek RTL8730E-Discovery board based on the Realtek RTL8730E MCU.

config ARCH_BOARD_RTL8721CSM
	bool "Realtek RTL8721CSM-Discovery board"
	depends on ARCH_CHIP_RTL8721CSM
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_BOARD_HAVE_FLASH
	select ARCH_HAVE_RAM_KERNEL_TEXT
	---help---
		Realtek RTL8721CSM-Discovery board based on the Realtek RTL8721CSM MCU.		

config ARCH_BOARD_STM32H745ZI_NUCLEO
	bool "STMicro STM32H745ZI-Nucleo board"
	depends on ARCH_CHIP_STM32H745
	select ARCH_HAVE_LEDS
	select ARCH_HAVE_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_BOARD_HAVE_FLASH
	---help---
		STMicro STM32H745ZI-Nucleo board based on the STMicro STM32H745ZI MCU.

config ARCH_BOARD_SABRE_6QUAD
 	bool "SABRE_6QUAD"
	depends on ARCH_CHIP_IMX6
	select ARCH_HAVE_BUTTONS
	select ARCH_BUTTONS
	select ARCH_HAVE_IRQBUTTONS
	select ARCH_HAVE_RAM_KERNEL_TEXT
 
endchoice

config ARCH_BOARD_ARTIK05X_FAMILY
    bool
    default n

config ARCH_BOARD_ESP32_FAMILY
    bool
    default n

config ARCH_BOARD
	string
	default "artik05x"           if ARCH_BOARD_ARTIK05X_FAMILY
	default "lm3s6965-ek"        if ARCH_BOARD_LM3S6965EK
	default "sidk_s5jt200"       if ARCH_BOARD_SIDK_S5JT200
	default "cy4390x"            if ARCH_BOARD_CY4390x
	default "stm32f407-disc1"    if ARCH_BOARD_STM32F407_DISC1
	default "stm32f429i-disco"   if ARCH_BOARD_STM32F429I_DISCO
	default "esp32_devkit"       if ARCH_BOARD_ESP32_FAMILY
	default "imxrt1020-evk"      if ARCH_BOARD_IMXRT1020_EVK
	default "imxrt1050-evk"      if ARCH_BOARD_IMXRT1050_EVK
	default "stm32l4r9ai-disco"  if ARCH_BOARD_STM32L4R9AI_DISCO
	default "rtl8720e"           if ARCH_BOARD_RTL8720E
	default "rtl8730e"           if ARCH_BOARD_RTL8730E
	default "rtl8721csm"         if ARCH_BOARD_RTL8721CSM
	default "stm32h745zi-nucleo" if ARCH_BOARD_STM32H745ZI_NUCLEO
	default "sabre-6quad"	     if ARCH_BOARD_SABRE_6QUAD	
comment "Common Board Options"

config ARCH_HAVE_LEDS
	bool

config ARCH_LEDS
	bool "Board LED support"
	default y
	depends on ARCH_HAVE_LEDS
	---help---
		Use board LEDs to show TinyAra execution status state. Unique to boards that have LEDs

config ARCH_HAVE_BUTTONS
	bool

config ARCH_BUTTONS
	bool "Board button support"
	default n
	depends on ARCH_HAVE_BUTTONS
	---help---
		"Support interfaces to use buttons provided by the board."

config ARCH_HAVE_IRQBUTTONS
	bool

config ARCH_IRQBUTTONS
	bool "Button interrupt support"
	default n
	depends on ARCH_BUTTONS && ARCH_HAVE_IRQBUTTONS
	---help---
		"Support interrupts on button presses and releases."

config ARCH_HAVE_RAM_KERNEL_TEXT
	bool
	default n
	---help---
		To support kernel text checks for RAM regions for supported boards.

config BOARD_CRASHDUMP
	bool "Enable Board level logging of crash dumps"
	default n
	---help---
		If selected up_asseert will call out to board_crashdump, in the case
		of an assertion failure, prior to calling exit. Or in the
		case of a hardfault prior to looping indefinitely. board_crashdump
		then has a chance to save the state of the machine.

		The purpose of board_crashdump is to save as much information as it can
		about the cause of the fault and then most likely reset the system.

		N.B. There is limited system resources that can be used, who knows
		what memory is trashed? So all we can expect to do is save the
		"machine state" in a place where on the next reset can write it
		to more sophisticated storage in a sane operating environment.

config BOARD_ASSERT_AUTORESET
	bool "Reset a board on assert status automatically"
	default n
	depends on BOARDCTL_RESET
	---help---
		Some cases do not need to stay assert status. This supports
		board reset. When fault manager is enabled this will reset the
		system only when fault is in kernel context.

config BOARD_ASSERT_SYSTEM_HALT
	bool "Enable Infinite loop feature on fault status"
	default y
	depends on !BOARD_ASSERT_AUTORESET
	---help---
		When this is enabled irrespective of any fault, system will
		go in infinite loop. This can help to debug the system using Trace32.
		When this is disabled, a system will be blocked only if an assert in interrupt handler or idle thread happens.
		In the other case, a faulty task is terminated only and it can bring unexpected situation.

config LIB_BOARDCTL
	bool "Enable boardctl() interface"
	default n
	---help---
		Enables support for the boardctl() interface.  Architecture
		specific logic must provide board_app_initialize() interface.

if LIB_BOARDCTL

config BOARDCTL_POWEROFF
	bool "Enable power off interfaces"
	default n
	depends on ARCH_HAVE_POWEROFF
	---help---
		Enables support for the BOARDIOC_POWEROFF boardctl() command.
		Architecture specific logic must provide the board_power_off()
		interface.

config BOARDCTL_RESET
	bool "Enable reset interfaces"
	default n
	depends on ARCH_HAVE_RESET
	---help---
		Enables support for the BOARDIOC_RESET boardctl() command.
		Architecture specific logic must provide the board_reset()
		interface.

config BOARDCTL_BOARD_HEADER
	bool
	default n
	---help---
		If selected, it will include a header with board specification values.

config BOARDCTL_UNIQUEID
	bool "Return board unique ID"
	default n
	---help---
		Enables support for the BOARDIOC_UNIQUEID boardctl() command.
		Architecture specific logic must provide the board_uniqueid()
		interface.

config BOARDCTL_UNIQUEID_SIZE
	int "Size of the board unique ID (bytes)"
	default 16
	depends on BOARDCTL_UNIQUEID
	---help---
		Provides the size of the memory buffer that must be provided by the
		caller of board_uniqueid() in which to receive the board unique ID.

endif # LIB_BOARDCTL

config BOARD_FOTA_SUPPORT
	bool "Enable board support for FOTA"
	default n
	select FOTA_DRIVER
	---help---
		If selected the board provides support for FOTA.

if BOARD_CRASHDUMP

config BOARD_COREDUMP_FLASH
	bool "Enable crashlog dump to flash"
	default n
	---help---
		If selected it will dump the assert log information to flash.

config BOARD_RAMDUMP_FLASH
	bool "Enable ramdump to flash"
	default n
	---help---
		If selected it will dump the RAM contents to flash.

config BOARD_DUMP_UART
	bool "Enable dumping of RAM and FS contents via UART"
	default n
	---help---
		If selected it will allow sending RAM and FS dump via UART.
endif

comment "Board-Specific Options"

if ARCH_BOARD_ARTIK05X_FAMILY
source board/artik05x/Kconfig
endif
if ARCH_BOARD_LM3S6965EK
source board/lm3s6965-ek/Kconfig
endif
if ARCH_BOARD_SIDK_S5JT200
source board/sidk_s5jt200/Kconfig
endif
if ARCH_BOARD_STM32F429I_DISCO
source board/stm32f429i-disco/Kconfig
endif
if ARCH_BOARD_ESP32_FAMILY
source board/esp32_devkit/Kconfig
endif
if ARCH_BOARD_IMXRT1020_EVK
source board/imxrt1020-evk/Kconfig
endif
if ARCH_BOARD_IMXRT1050_EVK
source board/imxrt1050-evk/Kconfig
endif
if ARCH_BOARD_STM32L4R9AI_DISCO
source board/stm32l4r9ai-disco/Kconfig
endif
if ARCH_BOARD_RTL8720E
source board/rtl8720e/Kconfig
endif
if ARCH_BOARD_RTL8730E
source board/rtl8730e/Kconfig
endif
if ARCH_BOARD_RTL8721CSM
source board/rtl8721csm/Kconfig
endif
if ARCH_BOARD_STM32H745ZI_NUCLEO
source board/stm32h745zi-nucleo/Kconfig
endif

source board/common/Kconfig
