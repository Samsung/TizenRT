#-------------------------------------------------------------------------------
# Copyright (c) 2001-2019, Arm Limited. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
#-------------------------------------------------------------------------------

# Project configuration for cc312 generic (development) host project
PROJ_NAME = cc312
TARGET_DIR = cc3x
PROJ_PRD = cc3x
HOST_LIBNAME = cc3x_lib

ifeq ($(filter armclang armcc ,$(CROSS_COMPILE)),$(CROSS_COMPILE))
TEE_OS = freertos
TEST_BOARD = mps2+
CFLAGS_EXTRA += -DDX_PLAT_MPS2_PLUS
CFLAGS_EXTRA += -DMBEDTLS_CONFIG_FILE='<config-cc312-mps2-freertos.h>'
endif

ifeq ($(CROSS_COMPILE),arm-none-eabi-)
TEE_OS = freertos
TEST_BOARD = mps2+
CFLAGS_EXTRA += -DDX_PLAT_MPS2_PLUS
CFLAGS_EXTRA += -DMBEDTLS_CONFIG_FILE='<config-cc312-mps2-freertos.h>'
endif


TEE_OS ?= linux
TEST_BOARD ?= zynq

ifeq ($(TEE_OS),linux)
CFLAGS_EXTRA += -DMBEDTLS_CONFIG_FILE='<config-cc312.h>'
endif

# Associated device indentification info.
CC_HW_VERSION = 0xFF
CC_TEE_HW_INC_DIR = hw/include

# max buffer size for DLLI
DLLI_MAX_BUFF_SIZE = 0x10000

# List of targets to build for host/src
PROJ_TARGETS += cc3x_lib cc3x_productionlib pal

# Specific project definitions

CC_CONFIG_SB_DOUBLE_BUFFER_MAX_SIZE_IN_BYTES =  8192
CC_CONFIG_MNG_MIN_BACKUP_SIZE_IN_BYTES = 512

# If the following flag = 1, then use specific ECC functions
# with SCA protection on program level (different from HW level)
CC_CONFIG_SUPPORT_ECC_SCA_SW_PROTECT = 0

# Low level driver support
FW_ENABLE_AES_DRIVER = 1

# Specific project definitions for sbromlib
CC_CONFIG_SB_INDIRECT_SRAM_ACCESS      = 1
CC_CONFIG_SB_CERT_VERSION_MAJOR        = 1
CC_CONFIG_SB_CERT_VERSION_MINOR        = 0
CC_CONFIG_SB_CC3X		       = 1

CFLAGS_EXTRA += -DCC_SRAM_INDIRECT_ACCESS



CFLAGS_EXTRA += -DUSE_MBEDTLS_CRYPTOCELL


TEST_PRODUCT = cc3x
