/*
 * Copyright (c) 2024 Samsung Electronics Co., Ltd. All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef ONERT_MICRO_TEST_MODELS_FLOAT_GRU_KERNEL_H
#define ONERT_MICRO_TEST_MODELS_FLOAT_GRU_KERNEL_H

#include "TestDataGRUBase.h"

namespace onert_micro
{
namespace test_model
{

namespace gru_float
{
/*
 * GRU Kernel:
 *
 *        Input(1, 1, 6)
 *            |
 *           GRU
 *            |
 *        Output(1, 1, 5)
 */
unsigned char test_kernel_model_circle[] = {
  0x1c, 0x00, 0x00, 0x00, 0x43, 0x49, 0x52, 0x30, 0x00, 0x00, 0x12, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xb4, 0x06, 0x00, 0x00, 0x98, 0x06, 0x00, 0x00,
  0xe0, 0x04, 0x00, 0x00, 0x70, 0x03, 0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0xd8, 0x02, 0x00, 0x00,
  0x90, 0x02, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0xe8, 0x01, 0x00, 0x00, 0xa8, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x6e, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
  0x65, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0xf4, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xfb, 0xfb, 0xff, 0xff, 0xff, 0x0c, 0x00, 0x0c, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d,
  0x2d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,
  0x18, 0x00, 0x04, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0xac, 0x05, 0x00, 0x00, 0xf4, 0x03, 0x00, 0x00, 0x88, 0x02, 0x00, 0x00, 0x2c, 0x02, 0x00, 0x00,
  0xf0, 0x01, 0x00, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x1a, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x10, 0x00,
  0x07, 0x00, 0x14, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00,
  0x10, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb,
  0x18, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xc4, 0xfa, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x03, 0x00, 0x00, 0x00, 0x34, 0xfb, 0xff, 0xff, 0x30, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,
  0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x3a,
  0x30, 0x00, 0x00, 0x00, 0x1c, 0xfb, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x68, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x02, 0x3c, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x73, 0x74, 0x72, 0x69,
  0x64, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x32, 0x00, 0x00, 0x00, 0x00,
  0x26, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xb4, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x02, 0x3c, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x64, 0x5f,
  0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x31, 0x00, 0x00, 0x00, 0x00, 0x72, 0xfd, 0xff, 0xff,
  0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x14, 0x00,
  0x08, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x38, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x00,
  0xc6, 0xfd, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x60, 0xfc, 0xff, 0xff, 0x24, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x46, 0x75, 0x73, 0x65, 0x64, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x47,
  0x52, 0x55, 0x00, 0x00, 0x3c, 0xfc, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x98, 0xfc, 0xff, 0xff, 0x48, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x73, 0x65, 0x71, 0x75,
  0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x75, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x73,
  0x00, 0x00, 0x00, 0x00, 0x4a, 0xfe, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0xf0, 0xfc, 0xff, 0xff, 0x58, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x2f, 0x4d, 0x61, 0x74, 0x4d, 0x75, 0x6c,
  0x5f, 0x31, 0x31, 0x00, 0x9a, 0xfe, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00,
  0xc0, 0xfb, 0x12, 0xbd, 0x4b, 0xb1, 0x0c, 0x3f, 0x51, 0xbe, 0xa0, 0x3d, 0xdb, 0xcd, 0xca, 0xbe,
  0x77, 0xa7, 0x8d, 0x3e, 0xd8, 0x24, 0xe8, 0x3e, 0xc6, 0xe3, 0xfe, 0x3d, 0xa8, 0x41, 0xf0, 0xbd,
  0x9e, 0x70, 0xf3, 0xbd, 0x50, 0xfc, 0x4b, 0x3e, 0x7f, 0x8b, 0xf0, 0x3d, 0xae, 0xc0, 0x83, 0x3d,
  0xe4, 0xf0, 0x98, 0xbe, 0xd4, 0xd0, 0x7f, 0xbe, 0x80, 0xca, 0x98, 0x39, 0xe6, 0x2c, 0x08, 0xbe,
  0x61, 0x44, 0xdf, 0xbd, 0x67, 0x32, 0x32, 0xbe, 0x6a, 0x61, 0xdf, 0x3e, 0xc3, 0x0c, 0x55, 0x3e,
  0x6c, 0x28, 0x0e, 0xbf, 0xb6, 0x52, 0xf1, 0x3d, 0xb7, 0xd1, 0x3f, 0xbd, 0xa6, 0xf0, 0x9d, 0xbe,
  0xa0, 0xdd, 0xb1, 0x3e, 0xa3, 0x7d, 0x50, 0xbd, 0x3e, 0xd7, 0xe6, 0x3e, 0xe4, 0xb0, 0xe6, 0x3d,
  0x2a, 0xd6, 0xeb, 0x3e, 0xa8, 0xc8, 0x49, 0xbb, 0xdd, 0xdc, 0x6b, 0xbe, 0x66, 0x48, 0xc1, 0x3d,
  0x26, 0x6e, 0x52, 0x3e, 0xfc, 0xd6, 0x64, 0x3d, 0x4f, 0x1d, 0x1f, 0xbf, 0x5f, 0xf0, 0x9e, 0x3e,
  0xe0, 0x6e, 0xad, 0x3c, 0x48, 0x37, 0xe7, 0xbd, 0x36, 0xea, 0x0b, 0xbe, 0x3b, 0x81, 0xf2, 0xbd,
  0x52, 0xe1, 0x56, 0xbc, 0x75, 0x2e, 0xa3, 0xbd, 0x8c, 0x71, 0xc5, 0x3d, 0xf0, 0xaf, 0x0b, 0x3e,
  0x6b, 0x7d, 0xba, 0x3e, 0x4e, 0xbd, 0x93, 0xbe, 0xb3, 0x5c, 0x9c, 0xbe, 0x3c, 0xe2, 0xf3, 0x3c,
  0x39, 0xf1, 0xa0, 0x3d, 0xa0, 0x35, 0x50, 0x3e, 0xfa, 0x87, 0x0e, 0xbe, 0x76, 0xc2, 0x12, 0xbd,
  0x2a, 0xd6, 0x01, 0x3f, 0xa0, 0x77, 0xd0, 0x3c, 0x5a, 0x1f, 0x26, 0x3e, 0x02, 0x59, 0x0b, 0x3e,
  0xef, 0x6c, 0x41, 0xbe, 0x6e, 0x40, 0x4a, 0xbd, 0x2f, 0x89, 0x33, 0x3e, 0x50, 0x54, 0x8a, 0x3e,
  0x4d, 0xbb, 0x9f, 0xbe, 0xfd, 0x54, 0xb3, 0x3e, 0xc8, 0x5b, 0x66, 0xbe, 0xf0, 0xb0, 0x44, 0x3d,
  0x8a, 0x4d, 0x14, 0xbe, 0x9d, 0xf7, 0xd4, 0xbd, 0x38, 0xec, 0xc7, 0xbe, 0xb2, 0x79, 0x76, 0x3e,
  0xb2, 0xc2, 0xdd, 0xbe, 0x44, 0xd9, 0x05, 0xbe, 0x59, 0x34, 0x89, 0x3e, 0x71, 0xf8, 0x2b, 0x3e,
  0x1d, 0x62, 0x24, 0x3f, 0x40, 0xe6, 0x02, 0x3d, 0xef, 0x03, 0xb8, 0x3d, 0x02, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x58, 0xfe, 0xff, 0xff, 0x98, 0x01, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x77, 0x68, 0x69, 0x6c,
  0x65, 0x2f, 0x4d, 0x61, 0x74, 0x4d, 0x75, 0x6c, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x04, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x9c, 0xb9, 0x96, 0xbe,
  0x30, 0x84, 0xdc, 0x3e, 0xb8, 0xe2, 0xc0, 0x3d, 0x00, 0xce, 0xf1, 0x3a, 0x28, 0xd6, 0xfb, 0x3d,
  0x49, 0x84, 0x95, 0xbe, 0xcc, 0x0d, 0x52, 0x3e, 0x7c, 0x4e, 0x6e, 0xbe, 0xde, 0xda, 0x4c, 0xbe,
  0x84, 0x5e, 0xda, 0x3e, 0x46, 0x2b, 0xd1, 0x3e, 0x78, 0xc8, 0x71, 0xbe, 0x00, 0xfd, 0x53, 0x3d,
  0x28, 0x4e, 0x91, 0x3e, 0x00, 0x46, 0xd6, 0xba, 0x20, 0x06, 0x97, 0xbe, 0xf4, 0x04, 0xdc, 0xbe,
  0xde, 0xf8, 0x05, 0xbf, 0x62, 0x20, 0x1d, 0xbe, 0x28, 0x28, 0xf9, 0x3d, 0xc6, 0xa0, 0x86, 0xbe,
  0xa2, 0x2f, 0x7f, 0xbe, 0xa0, 0xa1, 0x1d, 0xbd, 0x3c, 0x03, 0xb2, 0x3e, 0xe6, 0xe6, 0x7c, 0xbe,
  0x2e, 0x37, 0xbe, 0xbe, 0x84, 0xb2, 0x86, 0xbd, 0x10, 0x19, 0x56, 0x3e, 0x59, 0x86, 0x01, 0x3f,
  0xfc, 0x54, 0x15, 0x3e, 0xc3, 0xbd, 0x07, 0x3f, 0xa0, 0xcb, 0x5f, 0x3e, 0x6c, 0x19, 0xbb, 0x3e,
  0x9c, 0x98, 0x24, 0xbe, 0x40, 0x57, 0xd1, 0xbc, 0xb0, 0x9c, 0xec, 0xbd, 0x90, 0x19, 0xb4, 0x3d,
  0x59, 0x11, 0xe7, 0xbe, 0x04, 0x11, 0xd7, 0xbd, 0x6a, 0xd8, 0x46, 0xbe, 0xb9, 0xf2, 0x01, 0xbf,
  0x40, 0xe0, 0x2e, 0xbd, 0x9e, 0xe6, 0x9a, 0x3e, 0xa0, 0x27, 0xda, 0xbe, 0x39, 0xe9, 0x04, 0x3f,
  0x5c, 0x2f, 0x2d, 0x3e, 0x18, 0x35, 0x95, 0x3e, 0x5c, 0x67, 0x14, 0x3e, 0xd0, 0xb1, 0x92, 0xbd,
  0xa8, 0x99, 0xe2, 0xbd, 0x00, 0x1e, 0x0e, 0x3e, 0x80, 0x85, 0x7a, 0x3c, 0x88, 0xde, 0xde, 0x3e,
  0x0a, 0x10, 0xc9, 0x3e, 0x28, 0x29, 0x3c, 0xbd, 0xbe, 0x3a, 0xfd, 0x3e, 0x36, 0x76, 0xef, 0xbe,
  0x6e, 0x44, 0xb4, 0x3e, 0xdc, 0xd6, 0x9c, 0xbd, 0xf0, 0xed, 0x9a, 0x3e, 0x90, 0x9c, 0x6b, 0x3d,
  0x0c, 0xc3, 0x32, 0x3e, 0x8a, 0x27, 0x1f, 0xbe, 0x00, 0x64, 0x5f, 0x3a, 0x8e, 0x71, 0xcc, 0x3e,
  0xcf, 0xe7, 0xe1, 0xbe, 0xc6, 0x65, 0xb4, 0x3e, 0xa4, 0x65, 0x6d, 0x3e, 0x31, 0xd8, 0x03, 0x3f,
  0x2c, 0x2a, 0xa8, 0xbd, 0x38, 0x1b, 0xac, 0x3e, 0x60, 0xcc, 0x64, 0x3e, 0x18, 0x4c, 0x0e, 0xbd,
  0x82, 0x5e, 0xa2, 0x3e, 0xde, 0x70, 0xb0, 0xbe, 0x46, 0x07, 0xe6, 0xbe, 0xf6, 0x4a, 0xa8, 0xbe,
  0x90, 0xfa, 0x3f, 0x3e, 0x5c, 0x9a, 0xe9, 0xbe, 0x63, 0x1e, 0xd3, 0xbe, 0x20, 0x74, 0x7e, 0x3d,
  0x20, 0x9c, 0x02, 0xbf, 0xf7, 0x65, 0x02, 0x3f, 0xb6, 0x45, 0xdf, 0x3e, 0x4e, 0xc2, 0x48, 0xbe,
  0xe3, 0x90, 0xa9, 0xbe, 0xc8, 0x36, 0xab, 0x3d, 0xca, 0xc0, 0x22, 0xbe, 0xec, 0x99, 0x26, 0x3e,
  0xd0, 0x91, 0x35, 0x3e, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
  0x78, 0x3a, 0x30, 0x00, 0xec, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00};

const std::vector<float> input_data = {7.899295,   -4.584313,  -2.9251342,
                                       -2.1820352, -10.649105, 1.3530581};

const std::vector<float> reference_output_data = {-0.9979859, -0.90550894, 0.025957875, -0.39570245,
                                                  -0.8868108};

} // namespace gru_float

class TestDataFloatGRU : public TestDataGRUBase<float>
{
public:
  TestDataFloatGRU()
  {
    _input_data = gru_float::input_data;
    _reference_output_data = gru_float::reference_output_data;
    _test_kernel_model_circle = gru_float::test_kernel_model_circle;
  }

  ~TestDataFloatGRU() override = default;
};

} // namespace test_model
} // namespace onert_micro

#endif // ONERT_MICRO_TEST_MODELS_FLOAT_GRU_KERNEL_H
