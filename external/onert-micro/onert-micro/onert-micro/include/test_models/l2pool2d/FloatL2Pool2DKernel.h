/*
 * Copyright (c) 2024 Samsung Electronics Co., Ltd. All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef ONERT_MICRO_TEST_MODELS_FLOAT_L2POOL2D_KERNEL_H
#define ONERT_MICRO_TEST_MODELS_FLOAT_L2POOL2D_KERNEL_H

#include "TestDataL2Pool2DBase.h"

namespace onert_micro
{
namespace test_model
{
namespace l2pool2d_float
{
/*
 * L2Pool2D Kernel:
 *
 *      Input(1, 8, 8, 1)
 *            |
 *           L2Pool2D
 *            |
 *      Output(1, 7, 7, 1)
 */
const unsigned char test_kernel_model_circle[] = {
  0x18, 0x00, 0x00, 0x00, 0x43, 0x49, 0x52, 0x30, 0x00, 0x00, 0x0e, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x10, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff,
  0xfc, 0xff, 0xff, 0xff, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x14, 0x00, 0x10, 0x00, 0x0c, 0x00,
  0x08, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0e, 0x00, 0x16, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x08, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x1c, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x00, 0x17, 0x00, 0x10, 0x00, 0x0c, 0x00,
  0x08, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd4, 0xff, 0xff, 0xff, 0x0c, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x6f, 0x66, 0x6d, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x69, 0x66, 0x6d, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x11, 0x00, 0x00, 0x00,
  0x4f, 0x4e, 0x45, 0x2d, 0x74, 0x66, 0x6c, 0x69, 0x74, 0x65, 0x32, 0x63, 0x69, 0x72, 0x63, 0x6c,
  0x65, 0x00, 0x00, 0x00};

const std::vector<float> input_data = {
  67.38262,   67.41811,   1.2834148,  -98.304276, -79.165695, 15.270965,  3.746103,   -54.763,
  -42.926304, -23.553911, -19.94737,  47.355026,  31.100943,  8.447245,   -75.31512,  -16.644464,
  22.489397,  -39.29673,  -98.54282,  -85.136086, 41.03638,   -37.152763, -79.57822,  -68.96887,
  11.1106205, -10.539243, -8.441398,  -52.19395,  6.378709,   9.458231,   -77.18643,  99.294,
  76.699104,  45.281494,  -19.284706, 65.62093,   -66.792015, -1.4548094, -82.337814, -73.516815,
  5.0163054,  80.22257,   15.349068,  19.546398,  24.824991,  16.236868,  92.39976,   76.70845,
  -36.775307, -12.240916, 59.4311,    60.621857,  11.79261,   -64.71309,  -63.46639,  -33.302174,
  -36.784237, -40.939827, 15.621524,  -90.70094,  29.704996,  -71.49415,  14.5302105, -17.651545};
const std::vector<float> reference_output_data = {
  53.57955,  37.07942,  55.465694, 69.174965, 43.413803, 38.700638, 47.33504,  33.34464,  55.244015,
  69.998634, 55.095154, 32.02708,  58.0016,   65.26638,  23.898365, 53.472546, 70.27501,  54.07641,
  28.25977,  58.65199,  82.015915, 45.18763,  25.517868, 43.224625, 53.693985, 33.887444, 56.632225,
  83.667915, 59.987476, 47.6801,   36.385647, 49.41058,  36.54862,  62.415905, 81.55694,  44.618065,
  50.875214, 44.228725, 34.68579,  36.07896,  65.22483,  69.9266,   33.657883, 37.423244, 62.605423,
  56.839954, 50.79529,  58.17711,  37.61556};

} // namespace l2pool2d_float

class TestDataFloatL2Pool2D : public TestDataL2Pool2DBase<float>
{
public:
  TestDataFloatL2Pool2D()
  {
    _input_data = l2pool2d_float::input_data;
    _reference_output_data = l2pool2d_float::reference_output_data;
    _test_kernel_model_circle = l2pool2d_float::test_kernel_model_circle;
  }

  ~TestDataFloatL2Pool2D() override = default;
};

} // namespace test_model
} // namespace onert_micro

#endif // ONERT_MICRO_TEST_MODELS_FLOAT_L2POOL2D_KERNEL_H
